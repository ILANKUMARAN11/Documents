<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <title></title>
  <meta name="Generator" content="Cocoa HTML Writer">
  <meta name="CocoaVersion" content="2022.3">
  <style type="text/css">
    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Courier; color: #000000; -webkit-text-stroke: #000000}
    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Courier; color: #000000; -webkit-text-stroke: #000000; min-height: 14.0px}
    span.s1 {font-kerning: none}
    span.Apple-tab-span {white-space:pre}
  </style>
</head>
<body>
<p class="p1"><span class="s1"># Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.</span></p>
<p class="p1"><span class="s1">#</span></p>
<p class="p1"><span class="s1"># Licensed under the Apache License, Version 2.0 (the "License");</span></p>
<p class="p1"><span class="s1"># you may not use this file except in compliance with the License.</span></p>
<p class="p1"><span class="s1"># You may obtain a copy of the License at</span></p>
<p class="p1"><span class="s1">#</span></p>
<p class="p1"><span class="s1"># http://www.apache.org/licenses/LICENSE-2.0</span></p>
<p class="p1"><span class="s1">#</span></p>
<p class="p1"><span class="s1"># Unless required by applicable law or agreed to in writing, software</span></p>
<p class="p1"><span class="s1"># distributed under the License is distributed on an "AS IS" BASIS,</span></p>
<p class="p1"><span class="s1"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></p>
<p class="p1"><span class="s1"># See the License for the specific language governing permissions and</span></p>
<p class="p1"><span class="s1"># limitations under the License.</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"># This is a full example hazelcast.yaml that includes all the</span></p>
<p class="p1"><span class="s1"># configuration elements and attributes of a Hazelcast member.</span></p>
<p class="p1"><span class="s1">#</span></p>
<p class="p1"><span class="s1"># To use this, rename it to hazelcast.yaml and place it in</span></p>
<p class="p1"><span class="s1"># the directory where you start your Hazelcast member.</span></p>
<p class="p1"><span class="s1">#</span></p>
<p class="p1"><span class="s1"># To learn how to configure Hazelcast, please see the Reference Manual</span></p>
<p class="p1"><span class="s1"># at https://hazelcast.org/documentation/</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1">hazelcast:</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can use import to load different Hazelcast declarative configuration files you prepared.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can import as many YAML files as you want and hence compose your Hazelcast configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># out of those YAML files. If you want to use import, it should be placed at the top of your</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast YAML file right after the "hazelcast" root node.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Below is an example where the configuration files you want to include are located at your</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast working directory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>import:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- your-configuration-file.yaml</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Below are examples showing a classpath or filesystem location:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>import:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- file:///etc/hazelcast/your-configuration-file-1.yaml</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- classpath:your-configuration-file-2.yaml</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Below is an example showing property placeholders:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>import:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- ${environment}-your-configuration-file.yaml</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>import:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>- your-configuration-YAML-file</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The "config-replacers" allow to use variables (placeholders) within the configuration file and use an external</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># class to retrieve correct values (replacements).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It can be used for masking sensitive strings such as passwords for instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Format of a variable is:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># $ PREFIX { STRING_TO_BE_REPLACED }<span class="Apple-converted-space">      </span>e.g. $ENC{nnPgTqJCcCQ=:23000:B4y/nlp6M0t3q6YiKImW+w==}</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The PREFIX value depends on the replacer implementation (e.g. "ENC" is used for the EncryptionReplacer)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The STRING_TO_BE_REPLACED is the value which is provided to replacer implementation.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>config-replacers:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>fail-if-value-missing: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>replacers:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- class-name: com.hazelcast.config.replacer.EncryptionReplacer</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>passwordFile: password.txt</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>passwordUserProperties: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>cipherAlgorithm: DES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>keyLengthBits: 64</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>secretKeyAlgorithm: DES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>secretKeyFactoryAlgorithm: PBKDF2WithHmacSHA1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Specifies the cluster name. It allows creating separate sub-clusters with different names.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>name is also referenced in the WAN Replication configuration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>cluster-name: my-cluster</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST LICENSE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># If you have an Enterprise or Enterprise HD license, you can enter it here.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can also set your license key programmatically; please refer to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#setting-the-license-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>license-key: Your Hazelcast Enterprise or Enterprise HD License Key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When Hazelcast instances are created, they are put in a global registry with their creation names.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "instance-name" gives you the ability to get a specific Hazelcast instance from this registry</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># by giving the instance's name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>instance-name: hzInstance1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST MANAGEMENT CENTER CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The element "management-center" has the following optional attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * scripting-enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Set to true to allow scripting on the member, false to disallow.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast's Open Source edition provides the Management Center with monitoring at most 3 members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># in your cluster. To use it for more members, you need to have either a Management Center,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast Enterprise or Hazelcast Enterprise HD license.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>management-center:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>scripting-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The "properties" mapping lets you add properties to some of the Hazelcast elements used to configure some of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># the Hazelcast modules.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can define the name and value of these properties.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can use "properties" for the following Hazelcast configuration elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * discovery-strategy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * map-store</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * queue-store</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * wan-replication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * ssl</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * service</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * login-module</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * security-object</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * socket-interceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>your-property: Value of the property</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST WAN REPLICATION CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The WAN replication feature is available only in Hazelcast Enterprise.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The configuration element's name is "wan-replication". It has two attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * name:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Name of your WAN Replication. This name is referenced in IMap or ICache configuration when you add WAN</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Replication for these data structures (using the element "wan-replication-ref" in the configuration of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>IMap or ICache). Please see the "map" and "cache" configuration descriptions in this YAML.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The "wan-replication" element has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "batch-publisher":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>WAN publisher using the built-in com.hazelcast.enterprise.wan.impl.replication.WanBatchPublisher.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Waits until a batch size is reached or a delay time is passed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Please see the batch-size and batch-max-delay-millis configuration descriptions below.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "cluster-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the cluster name used as an endpoint cluster name for authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>on the target endpoint.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If there is no separate publisher ID property defined, this cluster name</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>will also be used as a WAN publisher ID. This ID is then used for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>identifying the publisher in a WanReplicationConfig.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "publisher-id":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the publisher ID used for identifying the publisher in a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>WanReplicationConfig.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If there is no publisher ID defined (it is empty), the cluster name will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>be used as a publisher ID.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "batch-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Changes the maximum size of events that are sent to the target cluster</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>in a single batch. The batch of events is not sent until this size is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>reached. Its default value is 500.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "batch-max-delay-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If the number of events generated does not reach the "batch-size", they</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>are sent to the target cluster after a certain amount of time is passed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>You can set this time in milliseconds using this element. Its default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>value is 1000 milliseconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "response-timeout-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>After a replication event is sent to the target cluster, the source member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>waits for a confirmation that says the event has reached the target. If</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>confirmation is not received for a period of `response-timeout-millis`,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the event is resent to the target cluster. The default value is 60000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>milliseconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "acknowledge-type":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Acknowledgment type for each target cluster when the events are replicated.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>You can set it to the following values:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- ACK_ON_RECEIPT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Guarantees that events are received by the target cluster. It does not</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>guarantee that the received event is actually applied, but it is faster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- ACK_ON_OPERATION_COMPLETE (default):</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Guarantees that the event is both received and applied by the target cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>It is more time consuming, but it is the best way if you have strong</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>consistency requirements.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "initial-publisher-state":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Defines the initial state in which a WAN publisher is started.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- REPLICATING (default):</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>State where both enqueuing new events is allowed, enqueued events are</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>replicated to the target cluster and WAN sync is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- PAUSED:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>State where new events are enqueued but they not are dequeued. Some events</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>which have been dequeued before the state was switched may still be replicated</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>to the target cluster but further events will not be replicated. WAN sync</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- STOPPED:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>State where neither new events are enqueued nor dequeued. As with the PAUSED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>state, some events might still be replicated after the publisher has</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>switched to this state. WAN sync is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "snapshot-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets if key-based coalescing is configured for this WAN publisher.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When enabled, only the latest WanReplicationEvent of a key is sent to target.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "idle-max-park-ns":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the maximum duration in nanoseconds that the WAN replication thread</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>will be parked if there are no events to replicate.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "idle-min-park-ns":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the minimum duration in nanoseconds that the WAN replication thread</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>will be parked if there are no events to replicate.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "max-concurrent-invocations":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the maximum number of WAN event batches being sent to the target</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>cluster concurrently.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Setting this property to anything less than 2 will only allow a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>single batch of events to be sent to each target endpoint and will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>maintain causality of events for a single partition.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Setting this property to 2 or higher will allow multiple batches</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>of WAN events to be sent to each target endpoint. Since this allows</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>reordering or batches due to network conditions, causality and ordering</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>of events for a single partition is lost and batches for a single</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>partition are now sent randomly to any available target endpoint.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>This, however, does present faster WAN replication for certain scenarios</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>such as replicating immutable, independent map entries which are only</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>added once and where ordering of when these entries are added is not</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>necessary.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Keep in mind that if you set this property to a value which is less than</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the target endpoint count, you will lose performance as not all target</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>endpoints will be used at any point in time to process WAN event batches.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>So, for instance, if you have a target cluster with 3 members (target</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>endpoints) and you want to use this property, it makes sense to set it</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to a value higher than 3. Otherwise, you can simply disable it</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>by setting it to less than 2 in which case WAN will use the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>default replication strategy and adapt to the target endpoint count</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>while maintaining causality.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "discovery-period-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the period in seconds in which WAN tries to discover new target</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>endpoints and reestablish connections to failed endpoints.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "use-endpoint-private-address":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets whether the WAN connection manager should connect to the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>endpoint on the private address returned by the discovery SPI.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>By default this property is false which means the WAN connection</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>manager will always use the public address.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "queue-full-behavior":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Policy to be applied when WAN Replication event queues are full. You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>set it to the following values:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>- DISCARD_AFTER_MUTATION (default):</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">              </span>The new WAN events generated are dropped and not replicated to the target</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">              </span>cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>- THROW_EXCEPTION:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">              </span>The WAN queue size is checked before each supported mutating operation. If</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">              </span>one of the queues of the target cluster is full,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">              </span>WANReplicationQueueFullException is thrown and the operation is not allowed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "max-target-endpoints":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Returns the maximum number of endpoints that WAN will connect to when</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>using a discovery mechanism to define endpoints.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>This property has no effect when static endpoint addresses are defined</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>using target-endpoints.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "queue-capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Size of the queue of events. Its default value is 10000. If you exceed</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>this queue size, then the oldest, not yet replicated updates might get</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>lost. Therefore, if you have a large rate of put/update/remove operations,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>you should increase queue capacity.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "target-endpoints":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Comma separated list of IP addresses of the target cluster members for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>which the WAN replication is implemented.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "sync":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Configuration for the WAN sync mechanism. It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "consistency-check-strategy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Sets the strategy for checking consistency of data between source and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>target cluster. Any inconsistency will not be reconciled, it will be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>merely reported via the usual mechanisms (e.g. statistics, diagnostics).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>The user must initiate WAN sync to reconcile there differences. For the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>check procedure to work properly, the target cluster should support the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>chosen strategy.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Default value is NONE, which means the check is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "aws":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" attribute to true for discovery within Amazon EC2. It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "access-key":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Access key of your account on EC2.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "secret-key":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Secret key of your account on EC2.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "iam-role":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>IAM role that binds with your instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "region":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>The region where your Hazelcast members run. Default value is us-east-1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">                        </span>It needs to be specified if the region is other than the default one.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "host-header":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>The URL that is the entry point for a web service. It is optional.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "security-group-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>Name of the security group you specified at the EC2 management console.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">                        </span>It is used to narrow the Hazelcast members to be within this group. It is optional.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "tag-key":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>To narrow the members in the cloud down to only Hazelcast members, you can set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">                        </span>this to the one you specified in the EC2 console. It is optional.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- "tag-value":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>To narrow the members in the cloud down to only Hazelcast members, you can set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">                        </span>this to the one you specified in the EC2 console. It is optional.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "discovery-strategies":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Add additional strategies for discovery in various cloud infrastructures.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>You can define multiple discovery strategies using the "discovery-strategies" sub-element and its properties.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#discovering-cluster-members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to see the properties you can use.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The following is an example for EC2 cloud.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>"discovery-strategies"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>- class: com.hazelcast.aws.AwsDiscoveryStrategy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>access-key: test-access-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>secret-key: test-secret-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>region: test-region</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>iam-role: test-iam-role</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>host-header: ec2.test-host-header</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>security-group-name: test-security-group-name</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>tag-key: test-tag-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>tag-value: test-tag-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>connection-timeout-seconds: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>hz-port: 5702</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "custom-publisher":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Custom implementation of a WAN publisher implementing WanPublisher.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Mandatory config value defining the fully qualified class name of the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>WAN publisher implementation.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "publisher-id":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Mandatory config value for the publisher ID used for identifying the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>publisher in a WanReplicationConfig.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "consumer":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Config for processing WAN events received from a target cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You can configure certain behaviour when processing incoming WAN events</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>or even configure your own implementation for a WAN consumer. A custom</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>WAN consumer allows you to define custom processing logic and is usually</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>used in combination with a custom WAN publisher.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>A custom consumer is optional and you may simply omit defining it which</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will cause the default processing logic to be used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the fully qualified class name of the class implementing</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>a custom WAN consumer (WanConsumer).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If you don't define a class name, the default processing logic for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>incoming WAN events will be used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "properties":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Properties for the custom WAN consumer. These properties are</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>accessible when initalizing the WAN consumer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "persist-wan-replicated-data":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When true, an incoming event over WAN replication can be persisted to a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>database for example, otherwise it will not be persisted. Default value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>wan-replication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>my-wan-cluster-batch:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>batch-publisher:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>nycPublisherId:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>cluster-name: nyc</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>batch-size: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>batch-max-delay-millis: 2000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>response-timeout-millis: 60000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>acknowledge-type: ACK_ON_OPERATION_COMPLETE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>initial-publisher-state: REPLICATING</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>snapshot-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>idle-max-park-ns: 250000000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>idle-min-park-ns: 10000000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>max-concurrent-invocations: -1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>discovery-period-seconds: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>use-endpoint-private-address: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>queue-full-behavior: DISCARD_AFTER_MUTATION</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>max-target-endpoints: 2147483647</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>queue-capacity: 10000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>target-endpoints: 10.3.5.1:5701,10.3.5.2:5701</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>sync:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>consistency-check-strategy: NONE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># aws:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>access-key: my-access-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>secret-key: my-secret-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>iam-role: dummy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>region: us-west-1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>host-header: ec2.amazonaws.com</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>security-group-name: hazelcast-sg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>tag-key: type</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>tag-value: hz-nodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>node-filter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">    </span>class: DummyFilterClass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">  </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">    </span>- class: com.hazelcast.jclouds.JCloudsDiscoveryStrategy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">      </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">        </span>provider: google-compute-engine</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">        </span>identity: GCE_IDENTITY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span># <span class="Apple-converted-space">        </span>credential: GCE_CREDENTIAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>custom-publisher:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>customPublisherId:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>class-name: com.companyName.CustomWanPublisher</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>prop1: prop1-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>prop2: prop2-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>consumer:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># class-name: com.myCompany.CustomWanConsumer</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># <span class="Apple-converted-space">  </span>prop1: prop1-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># <span class="Apple-converted-space">  </span>prop2: prop2-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>persist-wan-replicated-data: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST NETWORK CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The configuration to build your Hazelcast's network includes configuration for port, interface, discovery</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># mechanism, SSL, encryption, etc. The configuration element's name is "network".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "public address":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This optional element overrides the public address of a member. It is useful when</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># you have a private cloud. Normally, a member selects its socket address as its public address. But behind a NAT,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># two members may not be able to see/access each other. In this case, you can set their public addresses to their</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># defined addresses on NAT. The value should be given in the format "host IP address:port number".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "port":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Specifies the ports that Hazelcast will use to communicate between cluster members. It is optional and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># its default value is 5701. It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - port-count:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>By default, Hazelcast will try 100 ports to bind (i.e. the ports between 5701 and 5801). You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>change the port count in such cases as having large instances on a single machine or you are</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>willing to have only a few ports assigned. port-count is optional and its default value is 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - auto-increment:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>By default, Hazelcast tries to find a port by automatically incrementing the port numbers. If you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>don't want this (for example, you want to use a specific port), set auto-increment to false. If it is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>set to false, the port-count attribute is ignored. auto-increment is optional and its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Examples:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The example below looks for ports between 5701 and 5721, incrementing the ports starting from 5701.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>port-count: 20</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>port: 5701</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The example below forces Hazelcast to use only the port 5701.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>auto-increment: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>port: 5701</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "outbound-ports":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># By default, Hazelcast lets the system pick up an ephemeral port during socket bind operation. But security</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># policies/firewalls may require you to restrict outbound ports to be used by Hazelcast-enabled applications.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can specify these ports under the element "outbound-ports". You can give a single</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># port number, comma separated multiple ports or port ranges. See the example below.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># outbound-ports:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>- 33000-35000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>- 37000,37001,37002,37003</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>- 38000,38500-38600</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "reuse-address":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># If you set this to true, Hazelcast will use the same port when you restart a member right after you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># shut it down. It is optional and its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "join":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This configuration lets you choose a discovery mechanism that Hazelcast will use to form a cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast can find members by multicast, TCP/IP lists and by various discovery mechanisms provided by different cloud APIs.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The following are the elements of "join":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "multicast":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set its "enabled" attribute to true for discovery by multicast. It has another attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>("loopbackModeEnabled") which enables or disables the loopback mode in the multicast discovery</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>mechanism.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following sub-elements to fine tune the multicast discovery.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "multicast-group":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Specifies the multicast group IP address when you want to create clusters within</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the same network. Its default value is 224.2.2.3.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "multicast-port":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Specifies the multicast socket port that the Hazelcast member listens to and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>sends discovery messages through. Its default value is 54327.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "multicast-time-to-live":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Time-to-live value for multicast packets sent out to control the scope of multicasts.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "multicast-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Only when the members are starting up, this timeout (in seconds) specifies the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>period during which a member waits for a multicast response from another node.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>For example, if you set it as 60 seconds, each node will wait for 60 seconds until a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>leader node is selected. Its default value is 2 seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "trusted-interfaces":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Includes IP addresses of trusted members. When a node wants to join to the cluster,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>its join request will be rejected if it is not a trusted member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>You can give an IP addresses range using the wildcard (*) on the last digit of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IP address (e.g. 192.168.1.* or 192.168.1.100-110).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "tcp-ip":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following sub-elements.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Specifies whether the TCP/IP discovery is enabled or not. Default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "connection-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The maximum amount of time Hazelcast is going to try to connect to a well known member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>before giving up. Setting it to a too low value could mean that a member is not able</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to connect to a cluster. Setting it to a too high value means that member startup could</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>slow down because of longer timeouts (e.g. when a well known member is not up). Increasing</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>this value is recommended if you have many IPs listed and the members cannot properly</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>build up the cluster. Its default value is 5.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "required-member":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IP address of the required member. Cluster will only be formed if the member with this</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IP address is found.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "member":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IP address(es) of one or more well known members. Once members are connected to these</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>well known ones, all member addresses will be communicated with each other. You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>also give comma separated IP addresses using the "members" element or list the members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>under the "member-list" sequence.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "members":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Comma separated IP addresses of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "member-list":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sequence to list IP address(es) of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "interface":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IP address(es) of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "aws":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" sub-element to true for discovery within Amazon EC2.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to https://github.com/hazelcast/hazelcast-aws/#configuration for the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "gcp":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" sub-element to true for discovery within the Google Cloud Platform.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to https://github.com/hazelcast/hazelcast-gcp/#configuration for the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "azure":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" sub-element to true for discovery within Microsoft Azure.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to https://github.com/hazelcast/hazelcast-azure/#configuring-at-hazelcast-side for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "kubernetes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" sub-element to true for discovery in the Kubernetes environment.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to https://github.com/hazelcast/hazelcast-kubernetes#hazelcast-configuration for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "eureka":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Set its "enabled" sub-element to true for discovery with using Eureka Service Registry.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please refer to https://github.com/hazelcast/hazelcast-eureka#hazelcast-configuration for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "discovery-strategies":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set its "enabled" attribute to true for discovery in various cloud infrastructures. You also need to set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>value of "hazelcast.discovery.enabled" property to true. See the description of the "properties" element</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to learn how to do this.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You can define multiple discovery strategies and its properties. Please refer to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#discovering-cluster-members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to see the properties you can use.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The following is an example for EC2 cloud.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>- enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>class: com.hazelcast.jclouds.JCloudsDiscoveryStrategy&gt;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>provider: aws-ec2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>identity: AWS_IDENTITY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>credential: AWS_CREDENTIAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "interfaces":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Specifies which network interfaces Hazelcast should use. You need to set its "enabled" attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># to true to be able to use your defined interfaces. You can define multiple interfaces. By default, it is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "ssl":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Lets you configure SSL using the SSL context factory. This feature is available only in Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Enterprise. To be able to use it, encryption should NOT be enabled and you should first implement</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># your SSLContextFactory class. Its configuration contains the factory class and SSL properties.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># By default, it is disabled. The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>factory-class-name: com.hazelcast.nio.ssl.BasicSSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>keyStore: keyStore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>keyStorePassword: keyStorePassword</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>keyManagerAlgorithm: SunX509</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>trustManagerAlgorithm: SunX509</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>protocol: TLS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>mutualAuthentication: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "socket-interceptor":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Lets you add custom hooks to join and perform connection procedures (like a custom authentication protocol, etc.).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This feature is available only in Hazelcast Enterprise. To be able to use it, you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># should first implement the MemberSocketInterceptor (for members joining to a cluster) or</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># SocketInterceptor (for clients connecting to a member) class. Its configuration contains the class you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># implemented and socket interceptor properties. By default, it is disabled. The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># socket-interceptor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>class-name: com.hazelcast.examples.MySocketInterceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>property1: value1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>property2: value2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "symmetric-encryption":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Lets you encrypt the entire socket level communication among all Hazelcast members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This feature is available only in Hazelcast Enterprise.<span class="Apple-converted-space">  </span>Its configuration contains the encryption</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># properties and the same configuration must be placed to all members. By default, it is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># symmetric-encryption:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>algorithm: PBEWithMD5AndDES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>salt: thesalt</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>password: thepass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>iteration-count: 19</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "member-address-provider":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># IMPORTANT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This configuration is not intended to provide addresses of other cluster members with</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># which the Hazelcast instance will form a cluster. This is an SPI for advanced use in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># cases where the DefaultAddressPicker does not pick suitable addresses to bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># and publish to other cluster members. For instance, this could allow easier</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># deployment in some cases when running on Docker, AWS or other cloud environments.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># That said, if you are just starting with Hazelcast, you will probably want to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># set the member addresses by using the tcp-ip or multicast configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># or adding a discovery strategy.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Member address provider allows to plug in own strategy to customize:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>1. What address Hazelcast will bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>2. What address Hazelcast will advertise to other members on which they can bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># In most environments you don't need to customize this and the default strategy will work just</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># fine. However in some cloud environments the default strategy does not make the right choice and the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># member address provider delegates the process of address picking to external code.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies whether the member address provider SPI is enabled or not. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The name of the class implementing the com.hazelcast.spi.MemberAddressProvider interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "properties":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The properties that will be provided when constructing the provided MemberAddressProvider. Hazelcast will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>first try instantiating the provided class by invoking a constructor accepting a single</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>java.util.Properties instance. In the case where there is no such constructor and there are also</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>no properties defined by this configuration, Hazelcast will exceptionally try to use the no-arg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>constructor.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "failure-detector":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># A failure detector is responsible to determine if a member in the cluster is unreachable or crashed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Please refer to https://docs.hazelcast.org/docs/latest/manual/html-single/index.html#failure-detector-configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># for the failure detectors implemented by Hazelcast.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This element has the following sub-element:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "icmp":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>ICMP can be used in addition to the other detectors. It operates at layer 3 and detects network</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>and hardware issues more quickly.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "timeout-milliseconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Timeout in Milliseconds before declaring a failed ping.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "fail-fast-on-startup":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Cluster Member will fail to start if it is unable to action an ICMP ping command when ICMP is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Failure is usually due to OS level restrictions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "interval-milliseconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Time in milliseconds between each ICMP ping.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "max-attempts":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Maximum number of consecutive failed attempts before declaring a member suspect.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "parallel-mode":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Run ICMP detection in parallel with the Heartbeat failure detector.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* "ttl":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>Maximum number of times the IP Datagram (ping) can be forwarded, in most cases</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>all Hazelcast cluster members would be within one network switch/router therefore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>default of 0 is usually sufficient.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>network:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>public-address: 11.22.33.44:5555</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>auto-increment: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port-count: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port: 5701</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>outbound-ports:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- 34500</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>reuse-address: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>join:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>auto-detection:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>multicast:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-group: 224.2.2.3</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-port: 54327</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>tcp-ip:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interface: 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>required-member: 10.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>member-list:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.0.0.2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.0.0.3</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>aws:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>access-key: my-access-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>secret-key: my-secret-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>region: us-west-1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>host-header: ec2.amazonaws.com</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connection-timeout-seconds: 7</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>read-timeout-seconds: 7</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connection-retries: 4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5710</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>security-group-name: hazelcast-sg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag-key: type</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag-value: hz-nodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>iam-role: dummy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># cluster: my-clusters</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># family: test-family</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># service-name: test-service</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>gcp:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>private-key-path: key-path</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>projects: project-1,project-2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>region: us-central1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>zones: us-central1-b,us-central1-c</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>label: key=value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5710</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>azure:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>instance-metadata-available: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>client-id: CLIENT_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>client-secret: CLIENT_SECRET</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tenant-id: TENANT_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>subscription-id: SUB_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>resource-group: RESOURCE-GROUP-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>scale-set: SCALE-SET-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag: TAG-NAME=HZLCAST001</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5707</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>kubernetes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>namespace: MY-KUBERNETES-NAMESPACE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-name: MY-SERVICE-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-label-name: MY-SERVICE-LABEL-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-label-value: MY-SERVICE-LABEL-VALUE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>eureka:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>self-registration: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>namespace: hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>node-filter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>class: com.yourpackage.NodeFilter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>class: com.hazelcast.jclouds.JCloudsDiscoveryStrategy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>provider: google-compute-engine</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>identity: GCE_IDENTITY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>credential: GCE_CREDENTIAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>factory-class-name: com.hazelcast.nio.ssl.BasicSSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>protocol: TLS</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>mutualAuthentication: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>keyStore: /opt/hazelcast.keystore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>keyStorePassword: secret.97531</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>keyStoreType: JKS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>trustStore: /opt/hazelcast.truststore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>trustStorePassword: changeit</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>trustStoreType: JKS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>socket-interceptor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>symmetric-encryption:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>algorithm: PBEWithMD5AndDES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>password: ...</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>salt: ...</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>iteration-count: 7</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>member-address-provider:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>class-name: com.hazelcast.MemberAddressProviderImpl</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>prop1: prop1-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>prop2: prop2-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>failure-detector:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>icmp:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>timeout-milliseconds: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>fail-fast-on-startup: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interval-milliseconds: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>max-attempts: 2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>parallel-mode: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>ttl: 255</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># ===== HAZELCAST REST API CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Configures Hazelcast HTTP REST API.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># The "rest-api" element has a global enabled switch, which controls the entrypoint to HTTP REST API. If it's disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># then no text protocol is available.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Once the global switch is enabled there is an optional second level of control - REST endpoint groups. They are configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># by element "endpoint-group".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Groups and their defaults:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * CLUSTER_READ - enabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Group of operations for retrieving cluster state and its version.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * CLUSTER_WRITE - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Operations which changes cluster or node state or their configurations.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * HEALTH_CHECK - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Group of endpoints for HTTP health checking.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * HOT_RESTART - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Group of HTTP REST APIs related to Hot Restart feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * WAN - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Group of HTTP REST APIs related to WAN Replication feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># * DATA - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># <span class="Apple-converted-space">  </span>Group of HTTP REST APIs for data manipulation in the cluster (e.g. IMap and IQueue operations).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>rest-api:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>endpoint-groups:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>CLUSTER_READ:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>CLUSTER_WRITE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>HEALTH_CHECK:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>HOT_RESTART:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>WAN:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>DATA:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># ===== HAZELCAST MEMCACHE PROTOCOL CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Allows to configure Memcache text protocol support in Hazelcast.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>memcache-protocol:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== PARTITION GROUPING CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "partition-group". You can enable it and specify the type using</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># the "enabled" and "group-type" attributes. For CUSTOM type, you can define groups using its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "member-group" and "interface" sub-elements. You can group the members with one of the following types:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * HOST_AWARE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Members sharing the same network interface are grouped together. All members on the same host will be a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># single partition group.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * CUSTOM:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can add different and multiple members to a group.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * PER_MEMBER:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Each member is a group of its own and primary/backup partitions are distributed</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># randomly (not on the same physical member).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * ZONE_AWARE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Backups are created in the other zones. Each zone will be accepted as one partition group.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It can be used when you make use of Hazelcast's jclouds or Azure discovery service plugins.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * SPI:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can provide your own partition group implementation using the SPI grouping type. Please see</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Partition Group Configuration section in Hazelcast Reference Manual.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>partition-group:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>group-type: CUSTOM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>member-group:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- - 10.10.0.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.3.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.5.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- - 10.10.10.10-100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.2.*</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST EXECUTOR SERVICE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "executor-service". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your executor service. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve executor service statistics such as pending operations count,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># started operations count, completed operations count, and cancelled operations count. Its default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "pool-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The number of executor threads per member for the executor. Its default value is 8.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "queue-capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Task queue capacity of the executor. Its default value is 0, meaning Integer.MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "split-brain-protection-ref"'s value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>executor-service:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>pool-size: 16</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>queue-capacity: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST DURABLE EXECUTOR SERVICE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "durable-executor-service". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your durable executor service. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "pool-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The number of executor threads per member for the executor. Its default value is 16.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "durability":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Durability of the executor. The default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Capacity of the executor task per partition. The default value is 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># the "split-brain-protection-ref"'s value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>durable-executor-service:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>pool-size: 16</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>durability: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>capacity: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SCHEDULED EXECUTOR SERVICE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "scheduled-executor-service". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your scheduled executor service. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "pool-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The number of executor threads per member for the executor. Its default value is 16.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "durability":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Durability of the scheduled executor. The default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Capacity of the scheduled executor. The default value is 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This is the maximum number of tasks for a given scheduled executor on a particular partition.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "capacity-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The active policy for the capacity setting. Default is PER_NODE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Available options (PER_PARTITION, PER_NODE)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "merge-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The default policy is PutIfAbsentMergePolicy with a batch size of 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This is the policy used when merging entries from sub-clusters (after split-brain recovery).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>scheduled-executor-service:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>pool-size: 16</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>durability: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>capacity: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>capacity-policy: PER_NODE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST CARDINALITY ESTIMATOR SERVICE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "cardinality-estimator". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your estimator. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Number of synchronous backups. For example, if 1 is set as the backup-count,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>then the cardinality estimation will be copied to one other JVM for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>fail-safety. Valid numbers are 0 (no backup), 1, 2 ... 6.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of asynchronous backups. For example, if 1 is set as the backup-count,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>then the cardinality estimation will be copied to one other JVM for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>fail-safety. Valid numbers are 0 (no backup), 1, 2 ... 6.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "merge-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The default policy is `com.hazelcast.spi.merge.HyperLogLogMergePolicy` with a batch size of 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This is the policy used when merging estimators from sub-clusters (after split-brain recovery).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>cardinality-estimator:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 102</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST QUEUE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "queue".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has following optional attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># with which you can specify the name of your queue. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve queue statistics. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "max-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Maximum size of the queue. When a JVM's local queue size reaches the maximum, all put/offer operations</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># will be blocked until the queue size of the JVM goes below this maximum. Its default value is 0,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># meaning Integer.MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of synchronous backups. Queue is a non-partitioned data structure, so all entries of a Queue</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># resides in one partition. When this parameter is '1', it means there will be 1 backup of that Queue in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># another member in the cluster. When it is '2', 2 members will have the backup. 0 means there will be no</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># backups. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of asynchronous backups. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "empty-queue-ttl":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Used to purge unused or empty queues. If you define a value (time in seconds) for this element, then</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># your queue will be destroyed if it stays empty or unused for that time.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "item-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds listeners (listener classes) for the queue items using its sub-element "item-listener". You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># also set its attribute "include-value" to true if you want the item event to contain the item values,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># and you can set its attribute "local" to true if you want to listen to the items on the local member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "queue-store":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Includes configuration elements and attributes for your queue store implementation. When you want to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># load/store the distributed queue items from/to a persistent datastore, first implement Hazelcast's</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># QueueStore interface and then configure it using this element. It includes your implemented class name</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># and the following property configurations:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - binary:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If you do not reach the queue store from an external application, you might prefer to insert the items</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>in binary form. To do so, set this property to true and skip the deserialization step, which is a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>performance optimization. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - memory-limit:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of items after which Hazelcast will store items only to datastore. For example,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>if the memory limit is 1000, then the 1001st item will be put only to datastore.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This feature is useful when you want to avoid out-of-memory conditions. If you want to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>always use memory, you can set it to Integer.MAX_VALUE. Its default value is 1000.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - bulk-load:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Size of the bulks loaded from QueueStore when the queue is initialized. Its default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>value is 250.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "priority-comparator-class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Fully-qualified comparator's class name to be used for the priority queue.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If nothing is provided, then queue behaves as a FIFO queue.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If this value is non-null, then Hazelcast will ignore the queue store</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>"memory-limit" configuration value.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>queue:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>max-size: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>empty-queue-ttl: -1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>item-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>class-name: com.hazelcast.examples.ItemListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>queue-store:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.QueueStoreImpl</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>binary: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>memory-limit: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>bulk-load: 500</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>priority-comparator-class-name: com.hazelcast.collection.impl.queue.model.PriorityElementComparator</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST MAP CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "map". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your map. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Specifies in which format data will be stored in your map. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - BINARY:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in serialized binary format. It is the default option.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - OBJECT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in deserialized form.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - NATIVE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in the map that uses Hazelcast's High-Density Memory Store feature. This</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>option is available only in Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you enable it, you can have map level statistics such as last access time to map,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>total number of hits, key, value, etc. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "per-entry-stats-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Enable/disable per entry statistics. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you enable it, you can retrieve entry level statistics such as hits, creation time,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>last access time, last update time,last stored time.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "metadata-policy"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Metadata policy for this map. Hazelcast may process objects of supported types ahead of time to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># create additional metadata about them. This metadata then is used to make querying and indexing faster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Metadata creation may decrease put throughput.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Valid values are:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># CREATE_ON_UPDATE (default): Objects of supported types are pre-processed when they are created and updated.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># OFF: No metadata is created.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-deserialized-values":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Controls caching of deserialized values. Caching makes the query evaluation faster, but it costs memory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - NEVER: Deserialized values will never be cached.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - INDEX-ONLY: Deserialized values will be cached only when they are inserted into an index.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - ALWAYS: Deserialized values will always be cached.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Count of synchronous backups. When this count is 1, a map entry will have its backup on one other node in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the cluster. If you set it to 2, then a map entry will have its backup on two other nodes. You can set it</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to 0 if you do not want your entries to be backed up. The maximum value for the backup count is 6.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of asynchronous backups. Unlike the synchronous backup process, asynchronous backup process does not</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># block the map operations. Its default value is 0, meaning there will be no asynchronous backups.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Maximum time in seconds for each entry to stay in the map. If it is not 0, entries that are older than</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># this time and not updated for this time are evicted automatically. Valid values are integers between 0 and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Integer.MAX VALUE. Its default value is 0, which means infinite. If it is not 0, entries are evicted regardless</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># of the set eviction-policy.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "max-idle-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Maximum time in seconds for each entry to stay idle in the map. Entries that are idle for more than</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># this time are evicted automatically. An entry is idle if no get, put, EntryProcessor.process or</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># containsKey is called.<span class="Apple-converted-space">  </span>Valid values are integers between 0 and Integer.MAX VALUE. Its default value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># is 0, which means infinite.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "eviction":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># By default map has no eviction configured. Its &lt;eviction-policy&gt; is NONE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># To make it work you have to configure it.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - size: Maximum size of the map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - max-size-policy: Maximum size policy for eviction of the map. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* PER_NODE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum number of map entries in each cluster member. You cannot set the max-size to a value lower</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>than the partition count (which is 271 by default).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* PER_PARTITION:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum number of map entries within each partition.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* USED_HEAP_SIZE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum used heap size in megabytes per map for each Hazelcast instance. It does not work when</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>"in-memory-format" is set to OBJECT.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* USED_HEAP_PERCENTAGE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum used heap size percentage per map for each Hazelcast instance. If, for example, JVM is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>configured to have 1000 MB and this value is 10, then the map entries will be evicted when used heap size</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>exceeds 100 MB. It does not work when "in-memory-format" is set to OBJECT.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* FREE_HEAP_SIZE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Minimum free heap size in megabytes for each Hazelcast instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* FREE_HEAP_PERCENTAGE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Minimum free heap size percentage for each Hazelcast instance. If, for example, JVM is configured to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>have 1000 MB and this value is 10, then the map entries will be evicted when free heap size is below 100 MB.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* USED_NATIVE_MEMORY_SIZE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum used native memory size in megabytes per map for each Hazelcast instance. It is available only in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* USED_NATIVE_MEMORY_PERCENTAGE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maximum used native memory size percentage per map for each Hazelcast instance. It is available only in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* FREE_NATIVE_MEMORY_SIZE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Minimum free native memory size in megabytes for each Hazelcast instance. It is available only in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* FREE_NATIVE_MEMORY_PERCENTAGE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Minimum free native memory size percentage for each Hazelcast instance. It is available only in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - eviction-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Eviction policy has following values:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* NONE: No eviction.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* LRU: Least recently used entries will be removed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* LFU: Least frequently used entries will be removed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>* RANDOM: Randomly selected entries will be removed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "merge-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Policy that specifies how the map entries in the small cluster will merge with the bigger cluster after a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># split-brain syndrome. Its default values is "com.hazelcast.spi.merge.PutIfAbsentMergePolicy". Available</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># built-in policies are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.PassThroughMergePolicy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Entry will be added if there is no existing entry for the key.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.PutIfAbsentMergePolicy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Entry will be added if the merging entry does not exist in the cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.HigherHitsMergePolicy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Entry with the higher number of hits wins.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.LatestUpdateMergePolicy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Entry with the latest update wins.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "read-backup-data":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Used to enable reading from local backup map entries. Its default value is false. It can be used if there is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># at least 1 sync or async backup.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "merkle-tree":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Specifies whether the merkle tree is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "depth":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The depth of the merkle tree.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>A larger depth means that a data synchronization mechanism will be able</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>to pinpoint a smaller subset of the data structure contents in which a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>change occurred. This causes the synchronization mechanism to be more</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>efficient. On the other hand, a larger tree depth means the merkle tree</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>will consume more memory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>A smaller depth means the data synchronization mechanism will have to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>transfer larger chunks of the data structure in which a possible change</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>happened. On the other hand, a shallower tree consumes less memory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The depth must be between 2 and 27 (exclusive). The default depth is 10.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "hot-restart":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Used to enable Hazelcast's Hot Restart Persistence feature for the map. It is available only in Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Enterprise HD. Set its "enabled" to true to enable the feature. By default, it is disabled. It has the following</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># sub-element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "fsync":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set to true if the writing to disk should be followed by an fsync() system call. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "event-journal":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes and sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Specifies whether the event journal is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The capacity of the event journal. The capacity is the total number of items that the event journal</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>can hold at any moment. The actual number of items contained in the journal can be lower. Its default value is 10000.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The capacity is shared equally between all partitions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>This is done by assigning each partition {@code getCapacity() / partitionCount}</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>available slots in the event journal. Because of this, the effective total</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>capacity may be somewhat lower and you must take into account that the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>configured capacity is at least greater than the partition count.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Sets the time to live in seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Time to live is the time the event journal retains items before removing them from the journal.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The events are removed on journal read and write actions, not while the journal is idle.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Time to live can be disabled by setting timeToLiveSeconds to 0. This means that the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>events never expire but they can be overwritten when the capacity of the journal is exceeed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "map-store":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration options when you want to load/store the map entries from/to a persistent data store such as a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># relational database. Before configuring "map-store", you need to implement Hazelcast's MapStore or MapLoader</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># interfaces.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set to true to enable the map store functionality for your map. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - initial-mode:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the initial entry loading mode. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- LAZY: The loading is asynchronous. It is the default mode.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- EAGER: The loading is blocked until all partitions are loaded.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The name of your class implementing MapLoader and/or MapStore interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "write-delay-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of seconds to delay the storing of entries. If the value is 0, then it is write-through.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Otherwise, it is write-behind so updates will be stored after this period. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "write-batch-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Used to create batches when writing to map store. In default mode, all map entries will try</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to be written in one go. To create batches, the minimum meaningful value is 2. For values smaller than 2,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>it works as in default mode. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "write-coalescing":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It is meaningful if you are using write behind in MapStore. When it is set to true,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>only the latest store operation on a key during the write-delay-seconds will be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>reflected to MapStore. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "properties":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>While you are implementing MapStore or MapLoader you can define specific properties to be configured.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It can be your store's URL, credentials, etc. Please see the example map configuration snippet below.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "near-cache":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration options when you want to use a Near Cache for your map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - name: You can give a name for your Near Cache. It is optional and its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of seconds for each entry to stay in the Near Cache. Entries that are older than this</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>period are automatically evicted from the Near Cache. Any integer between 0 and Integer.MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>0 means infinite. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "max-idle-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of seconds each entry can stay in the Near Cache as untouched (not read). Entries that</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>are not read more than this period are removed from the Near Cache. Any integer between 0 and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Integer.MAX_VALUE. 0 means Integer.MAX_VALUE. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "invalidate-on-change":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Specifies whether the cached entries are evicted when the entries are updated or removed. Its default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies in which format data will be stored in your Near Cache. Note that a map's in-memory format</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>can be different from that of its Near Cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- BINARY:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Data will be stored in serialized binary format. It is the default option.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- OBJECT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Data will be stored in deserialized form.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- NATIVE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Data will be stored in the Near Cache that uses Hazelcast's High-Density Memory Store feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>This option is available only in Hazelcast Enterprise HD. Note that a map and its Near Cache</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>can independently use High-Density Memory Store. For example, while your map does not use</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>High-Density Memory Store, its Near Cache can use it.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "cache-local-entries":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Specifies whether the local entries will be cached. It can be useful when in-memory format for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Near Cache is different from that of the map. By default, it is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "eviction":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Configuration for the eviction when the in-memory format of the Near Cache is NATIVE. It has the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- size: Maximum size (entry count) of the Near Cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- max-size-policy: Maximum size policy for eviction of the Near Cache. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">            </span>* ENTRY_COUNT: Maximum entry count per member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>* USED_NATIVE_MEMORY_SIZE: Maximum used native memory size in megabytes.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>* USED_NATIVE_MEMORY_PERCENTAGE: Maximum used native memory percentage.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>* FREE_NATIVE_MEMORY_SIZE: Minimum free native memory size to trigger cleanup.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>* FREE_NATIVE_MEMORY_PERCENTAGE: Minimum free native memory percentage to trigger cleanup.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- eviction-policy: See the "eviction-policy" element above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>- comparator-class-name: The comparator to be used while comparing entries to be evicted.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "wan-replication-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Configuration of the WAN replication for your map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- name:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Name of the WAN replication configuration specified in the "name" attribute of the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>"wan-replication" element. See the "wan-replication" element above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "filters":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Filters to intercept WAN replication events before they are placed to WAN event replication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>queues by providing a filtering API. Just implement Hazelcast's MapWanEventFilter interface</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to create your filters. You can define multiple filters and add to the configuration using the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>"filter" sub-elements within the "filters" element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "republishing-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When enabled, an incoming event to a member is forwarded to target cluster of that member. Its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "merge-policy-class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Resolve conflicts that occurred when target cluster already has the replicated</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>entry key.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>4 merge policy implementations for IMap and 2 merge policy implementations for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>ICache are provided out-of-the-box.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>IMap has the following merge policies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.PutIfAbsentMergePolicy: Incoming entry merges from the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>source map to the target map if it does not exist in the target map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.HigherHitsMergePolicy: Incoming entry merges from the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>source map to the target map if the source entry has more hits than the target one.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.PassThroughMergePolicy: Incoming entry merges from the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>source map to the target map unless the incoming entry is not null.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.LatestUpdateMergePolicy: Incoming entry merges from the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>source map to the target map if the source entry has been updated more recently</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>than the target entry. Please note that this merge policy can only be used when the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>clusters' clocks are in sync.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>ICache has the following merge policies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.HigherHitsMergePolicy: Incoming entry merges from</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the source cache to the target cache if the source entry has more hits than the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>target one.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.PassThroughMergePolicy: Incoming entry merges from</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the source cache to the target cache unless the incoming entry is not null.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The default policy is com.hazelcast.spi.merge.PassThroughMergePolicy.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "indexes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can define indexes for your map using this element's "index" sub-elements. Index definition consists of type,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># optional name and the list of columns to be indexed. Valid types are SORTED (default) and HASH.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "attributes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can define attributes that may be referenced in predicates, queries and indexes using this element's</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "attribute" sub-elements. Each "attribute" has only the "extractor-class-name" attribute which you should define</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># beforehand by implementing Hazelcast's ValueExtractor class.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "entry-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds listeners (listener classes) for the map entries using the "entry-listener" sub-elements. You can also set its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>attribute "include-value" to true if you want the entry event to contain the item values, and you can set its attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>"local" to true if you want to listen to the entries on the local member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "partition-lost-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the partition lost listeners that you created by implementing Hazelcast's PartitionLostListener interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the split brain protection for this map which you configure using the "split-brain-protection" element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You should set the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>map:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>metadata-policy: CREATE_ON_UPDATE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>per-entry-stats-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cache-deserialized-values: ALWAYS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>time-to-live-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>max-idle-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>eviction:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>eviction-policy: NONE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>max-size-policy: PER_NODE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>size: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>read-backup-data: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>hot-restart:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>fsync: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>event-journal:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>capacity: 10000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>time-to-live-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merkle-tree:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>depth: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>map-store:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>initial-mode: LAZY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.DummyStore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>write-delay-seconds: 60</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>write-batch-size: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>write-coalescing: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>jdbc_url: my.jdbc.com</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>near-cache:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>time-to-live-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>max-idle-seconds: 60</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>invalidate-on-change: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>cache-local-entries: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>eviction:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>size: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>max-size-policy: ENTRY_COUNT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>eviction-policy: LFU</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>wan-replication-ref:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>my-wan-cluster-batch:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>merge-policy-class-name: PassThroughMergePolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>filters:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- com.example.SampleFilter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- com.example.SampleFilter2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>republishing-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>indexes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># unordered/hash index on the name attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- type: HASH</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># ordered/tree index on the age attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- "age"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># composite unordered/hash index on the name and age attributes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- type: HASH</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- "age"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># composite ordered/tree index on the age and name attributes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- "age"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># bitmap index on the age attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- type: BITMAP</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- "age"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># bitmap index on the name attribute with options</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- type: BITMAP</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>bitmap-index-options:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>unique-key: id</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>unique-key-transformation: RAW</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>currency:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>extractor-class-name: com.bank.CurrencyExtractor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>entry-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- class-name: com.your-package.MyEntryListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>local: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>partition-lost-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- com.your-package.YourPartitionLostListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># ===== HAZELCAST CONTINUOUS QUERY CACHE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># Configuration element's name is "query-caches".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># You can create your query caches using its<span class="Apple-converted-space">  </span>"query-cache" sub-element. Its parent element is "map",</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># i.e. it should be placed within the "map" configuration. Each "query-cache" has the attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># can specify the name of your query cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "include-value":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Set to true if you want to cache the value too. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "predicate":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Predicate to filter events which will be applied to the query cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "entry-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Adds listeners (listener classes) for your query cache entries. See "entry-listeners" in the map configuration above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Type of the data to be stored in your query cache. See "in-memory-format" in the map configuration above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "populate":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Set to true if you want to enable the initial population of your query cache. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "coalesce":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Set to true if you want to enable the coalescing of your query cache. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "delay-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Minimum time in seconds that an event waits in the member's buffer. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "batch-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Batch size used to determine the number of events sent in a batch to your query cache. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "buffer-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Maximum number of events which can be stored in a partition buffer. Its default value is 16.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "eviction":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>Configuration for the eviction of your query cache. See "eviction" in the map configuration above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># * "indexes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>You can define indexes for your query cache using this element's "index" sub-elements. See "index" in the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># <span class="Apple-converted-space">    </span>map configuration above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>query-caches:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>myContQueryCache:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>predicate:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>class-name: com.hazelcast.examples.ExamplePredicate</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>entry-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: "..."</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>populate: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>coalesce: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>delay-seconds: 3</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>batch-size: 2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>buffer-size: 32</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>eviction:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>size: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>max-size-policy: ENTRY_COUNT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>eviction-policy: LFU</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>indexes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>- "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST MULTIMAP CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "multimap". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your multimap. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># All sub-elements of "multimap" except "value-collection-type" and "binary" have the same meaning as in "map" configuration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can specify the type of the value collection using "value-collection-type". Available values are SET and LIST.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># By default, BINARY in-memory format is used, meaning that the object is stored in a serialized form.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can set the element "binary" to false, then, the OBJECT in-memory format is used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has also the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>multimap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>binary: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>value-collection-type: SET</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>entry-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- class-name: com.hazelcast.examples.EntryListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>local: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST REPLICATED MAP CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "replicatedmap". It has the required attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your replicated map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Specifies in which format data will be stored in your replicated map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - BINARY:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in serialized binary format. It is the default option.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - OBJECT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in deserialized form.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-fillup":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies whether the replicated map is available for reads before the initial</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># replication is completed. Its default value is true. If false, no Exception will be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># thrown when the replicated map is not yet ready, but call is blocked until the initial</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># replication is completed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve replicated map entry statistics such as creation time,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># expiration time, number of hits, key, value, etc. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "entry-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds listeners (listener classes) for the replicated map entries.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You can also set its attribute "include-value" to true if you want the entry event to contain the item values,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>and you can set its attribute "local" to true if you want to listen to the entries on the local member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>replicatedmap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>replicatedMap1:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-fillup: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>entry-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- class-name: com.hazelcast.examples.EntryListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>local: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: LatestAccessMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST CACHE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "cache". It has the required attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "key-type":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Type of the cache entries' keys. The fully qualified class name of the cache key type should be given</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># using its "class-name" attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "value-type":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Type of the cache entries' values. The fully qualified class name of the cache value type should be given</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># using its "class-name" attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you enable it, you can retrieve cache entry statistics such as creation time, expiration time,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>number of hits, key, value, etc. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "management-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># If set to true, JMX beans are enabled and collected statistics are provided. It doesn't automatically</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># enable statistics collection. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "read-through":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># If set to true, enables read-through behavior of the cache to an underlying configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># javax.cache.integration.CacheLoader which is also known as lazy-loading. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "write-through":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># If set to true, enables write-through behavior of the cache to an underlying configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># javax.cache.integration.CacheWriter which passes any changed value to the external backend resource. Its default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-loader-factory":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Fully qualified class name of the javax.cache.configuration.Factory implementation providing a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># javax.cache.integration.CacheLoader instance to the cache. Provide this class name by using its "class-name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-loader": Name of the cache loader class.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-writer-factory":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Fully qualified class name of the javax.cache.configuration.Factory implementation providing a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># javax.cache.integration.CacheWriter instance to the cache. Provide this class name using its "class-name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-writer": Name of the cache writer class.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "expiry-policy-factory":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Fully qualified class name of the javax.cache.configuration.Factory implementation providing a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># javax.cache.expiry.ExpiryPolicy instance to the cache. Provide this class name using its "class-name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cache-entry-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># List of cache entry listeners given by its "cache-entry-listener" sub-element. Each "cache-entry-listener"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - old-value-required:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If set to true, previously assigned values for the affected keys will be sent to the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>javax.cache.event.CacheEntryListener implementation. Setting this attribute to true creates additional</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>traffic. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - synchronous:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If set to true, the javax.cache.event.CacheEntryListener implementation will be called in a synchronous</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>manner. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - cache-entry-listener-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Fully qualified class name of the javax.cache.configuration.Factory implementation providing a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>javax.cache.event.CacheEntryListener instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - cache-entry-event-filter-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Fully qualified class name of the javax.cache.configuration.Factory implementation providing a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>javax.cache.event.CacheEntryEventFilter instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies in which format data will be stored in your cache. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - BINARY:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in serialized binary format. It is the default option.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - OBJECT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in deserialized form.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - NATIVE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data will be stored in the cache that uses Hazelcast's High-Density Memory Store feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This option is available only in Hazelcast Enterprise HD.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of synchronous backups. If it is 1, for example, then all entries of the cache are copied to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># one other instance as synchronous for fail-safety. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of asynchronous backups. For example, if it is 1, then all entries of the cache are copied to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>one other instance as asynchronous for fail-safety. The sum of "backup-count" and "async-backup-count"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>cannot be larger than 6. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "eviction":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration for the eviction of your cache. It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - size: Maximum size (entry count) of the cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - max-size-policy: Maximum size policy for eviction of the cache. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* ENTRY_COUNT: Maximum entry count per member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* USED_NATIVE_MEMORY_SIZE: Maximum used native memory size in megabytes.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* USED_NATIVE_MEMORY_PERCENTAGE: Maximum used native memory percentage.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* FREE_NATIVE_MEMORY_SIZE: Minimum free native memory size to trigger cleanup.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* FREE_NATIVE_MEMORY_PERCENTAGE: Minimum free native memory percentage to trigger cleanup.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - eviction-policy: See the "eviction-policy" element above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "wan-replication-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Configuration of the WAN replication for your cache.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- name:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Name of the WAN replication configuration specified in the "name" attribute of the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>"wan-replication" element. See the "wan-replication" element above.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "filters":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Filters to intercept WAN replication events before they are placed to WAN event replication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>queues by providing a filtering API. Just implement Hazelcast's CacheWanEventFilter interface</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to create your filters. You can define multiple filters within the "filters" element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "republishing-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When enabled, an incoming event to a member is forwarded to target cluster of that member. Its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "merge-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Resolve conflicts that occurred when target cluster already has the replicated</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>entry key.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>4 merge policy implementations for IMap and 2 merge policy implementations for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>ICache are provided out-of-the-box.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>ICache has the following merge policies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.HigherHitsMergePolicy: Incoming entry merges from</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the source cache to the target cache if the source entry has more hits than the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>target one.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>com.hazelcast.spi.merge.PassThroughMergePolicy: Incoming entry merges from</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the source cache to the target cache unless the incoming entry is not null.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the split brain protection for this cache which you configure using the "split-brain-protection" element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You should set the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "partition-lost-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the partition lost listeners that you created by implementing Hazelcast's PartitionLostListener interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "merge-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The following are the built-in merge policies for cache. You can either use their full class names or constant</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>names (given in parentheses).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.PassThroughMergePolicy (PASS_THROUGH)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.PutIfAbsentMergePolicy (PUT_IF_ABSENT)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.HigherHitsMergePolicy (HIGHER_HITS)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - com.hazelcast.spi.merge.LatestAccessMergePolicy (LATEST_ACCESS)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "hot-restart":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Used to enable Hazelcast's Hot Restart Persistence feature for the cache. It is available only in Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Enterprise HD. Set its "enabled" to true to enable the feature. By default, it is disabled. It has the following</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># sub-element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "fsync":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true if the writing to disk should be followed by an fsync() system call. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "event-journal":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes and sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Specifies whether the event journal is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The capacity of the event journal. The capacity is the total number of items that the event journal</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>can hold at any moment. The actual number of items contained in the journal can be lower. Its default value is 10000.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The capacity is shared equally between all partitions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>This is done by assigning each partition {@code getCapacity() / partitionCount}</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>available slots in the event journal. Because of this, the effective total</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>capacity may be somewhat lower and you must take into account that the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>configured capacity is at least greater than the partition count.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Sets the time to live in seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Time to live is the time the event journal retains items before removing them from the journal.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>The events are removed on journal read and write actions, not while the journal is idle.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Time to live can be disabled by setting timeToLiveSeconds to 0. This means that the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>events never expire but they can be overwritten when the capacity of the journal is exceeed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-tab-span">	</span>Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "disable-per-entry-invalidation-events":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Disables invalidation events for each entry; but full-flush invalidation events are still enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Full-flush invalidation means the invalidation of events for all entries when clear is called.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>cache:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>key-type:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: java.lang.Object</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>value-type:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: java.lang.Object</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>management-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>read-through: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>write-through: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cache-loader-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.example.cache.MyCacheLoaderFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cache-writer-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.example.cache.MyCacheWriterFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>expiry-policy-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.example.cache.MyExpirePolicyFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cache-entry-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>cache-entry-listener:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>old-value-required: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>synchronous: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>cache-entry-listener-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>class-name: com.example.cache.MyEntryListenerFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>cache-entry-event-filter-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>class-name: com.example.cache.MyEntryEventFilterFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>eviction:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>size: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>max-size-policy: ENTRY_COUNT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>eviction-policy: LFU</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>wan-replication-ref:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">         </span>name: my-wan-cluster-batch</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">         </span>merge-policy-class-name: PassThroughMergePolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">         </span>republishing-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">         </span>filters:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">           </span>- com.example.SampleFilter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>partition-lost-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- com.your-package.YourPartitionLostListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: LatestAccessMergePolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>hot-restart:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>fsync: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>event-journal:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>capacity: 10000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>time-to-live-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>disable-per-entry-invalidation-events: true</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST LIST CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "list". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your list. This attribute's default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve list statistics. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "max-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Maximum size of the list (item count). Its default value is 0, meaning Integer.MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of synchronous backups. List is a non-partitioned data structure, so all entries of a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># List reside in one partition. If it is set to 1, there will be 1 backup of that List in another</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># member in the cluster. When it is 2, 2 members will have the backup. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of asynchronous backups. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "item-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds listeners (listener classes) for the List items using its sub-element "item-listener". You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># also set its attribute "include-value" to true if you want the item event to contain the item values.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>list:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>max-size: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>item-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- class-name: com.hazelcast.examples.ItemListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SET CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "set". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your set. This attribute's default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve set statistics. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "max-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Maximum size of the set (item count). Its default value is 0, meaning Integer.MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of synchronous backups. Set is a non-partitioned data structure, so all entries of a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Set reside in one partition. If it is set to 1, there will be 1 backup of that Set in another</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># member in the cluster. When it is 2, 2 members will have the backup. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Number of asynchronous backups. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "item-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds listeners (listener classes) for the Set items. You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># also set its attribute "include-value" to true if you want the item event to contain the item values.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>set:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>max-size: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>item-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- class-name: com.hazelcast.examples.ItemListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>include-value: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>batch-size: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST TOPIC CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "topic". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your topic. This attribute's default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "global-ordering-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When it is set to true, all cluster members that listen to a topic will receive the messages in the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># same order they were published by all members. This way, Hazelcast guarantees that all members will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># see the in the same order. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># When you enable it, you can retrieve topic statistics such as total number of published and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># received messages. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "message-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Adds listeners (listener classes) for the Topic messages using its sub-element "message-listener".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "multi-threading-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Default is `false`, meaning only one dedicated thread will handle topic messages.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When multi-threading is enabled (true), all threads from event thread pool can be used for message handling.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>topic:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>global-ordering-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>message-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- com.hazelcast.examples.MessageListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST RELIABLE TOPIC CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Reliable Topic uses the same ITopic interface. The main difference is that it is backed up by</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast Ringbuffer data structure. Reliable Topic messages are stored in the Ringbuffer</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "reliable-topic". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your Reliable Topic, which is the same name you give to your Ringbuffer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This attribute's default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Enables or disables statistics for this reliable topic.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Collects the creation time, total number of published and received</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>messages for each member locally. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "read-batch-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the read batch size.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The ReliableTopic tries to read a batch of messages from the ringbuffer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It will get at least one, but if there are more available, then it will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>try to get more to increase throughput. The maximum read batch size can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>be influenced using the read batch size.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Apart from influencing the number of messages to retrieve, the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>readBatchSize also determines how many messages will be processed</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>by the thread running the MessageListener before it returns back</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to the pool to look for other MessageListeners that need to be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>processed. The problem with returning to the pool and looking for new work</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>is that interacting with an executor is quite expensive due to contention</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>on the work-queue. The more work that can be done without retuning to the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>pool, the smaller the overhead.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If the readBatchSize is 10 and there are 50 messages available,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>10 items are retrieved and processed consecutively before the thread goes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>back to the pool and helps out with the processing of other messages.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If the readBatchSize is 10 and there are 2 items available,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>2 items are retrieved and processed consecutively.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If the readBatchSize is an issue because a thread will be busy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>too long with processing a single MessageListener and it can't</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>help out other MessageListeners, increase the size of the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>threadpool so the other MessageListeners don't need to wait for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>a thread, but can be processed in parallel.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "topic-overload-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>A policy to deal with an overloaded topic; so topic where there is no place to store new messages.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This policy can only be used in combination with the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>com.hazelcast.core.HazelcastInstance#getReliableTopic(String).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The reliable topic uses a com.hazelcast.ringbuffer.Ringbuffer to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>store the messages. A ringbuffer doesn't track where readers are, so</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>it has no concept of a slow consumers. This provides many advantages like</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>high performance reads, but it also gives the ability to the reader to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>re-read the same message multiple times in case of an error.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>A ringbuffer has a limited, fixed capacity. A fast producer may overwrite</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>old messages that are still being read by a slow consumer. To prevent</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>this, we may configure a time-to-live on the ringbuffer (see</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>com.hazelcast.config.RingbufferConfig#setTimeToLiveSeconds(int).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Once the time-to-live is configured, the TopicOverloadPolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>controls how the publisher is going to deal with the situation that a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>ringbuffer is full and the oldest item in the ringbuffer is not old</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>enough to get overwritten.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Keep in mind that this retention period (time-to-live) can keep messages</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>from being overwritten, even though all readers might have already completed reading.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Its default value is BLOCK. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- DISCARD_OLDEST:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Using this policy, a message that has not expired can be overwritten.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>No matter the retention period set, the overwrite will just overwrite</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the item.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>This can be a problem for slow consumers because they were promised a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>certain time window to process messages. But it will benefit producers</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>and fast consumers since they are able to continue. This policy sacrifices</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the slow producer in favor of fast producers/consumers.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- DISCARD_NEWEST:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Message that was to be published is discarded.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- BLOCK:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The caller will wait until there is space in the Ringbuffer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- ERROR:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The publish call fails immediately.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "message-listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds listeners (listener classes) for the Reliable Topic messages.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>reliable-topic:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>topic-overload-policy: ERROR</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>read-batch-size: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>message-listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- com.hazelcast.examples.MessageListener</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST RINGBUFFER CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "ringbuffer". It has the required attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your Ringbuffer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "capacity":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of items in the Ringbuffer. If no "time-to-live-seconds" is set,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>this value will always be equal to the capacity after the head completes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the first loop around the ring. This is because no items are being</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>expired. Its default value is 10000.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the time to live in seconds which is the maximum number of seconds</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>for each item to stay in the ringbuffer before being removed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Entries that are older than time-to-live-seconds are removed from the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>ringbuffer on the next ringbuffer operation (read or write).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Time to live can be disabled by setting time-to-live-seconds to 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It means that items won't get removed because they expire. They may only</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>be overwritten.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When time-to-live-seconds is disabled and after the tail does a full</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>loop in the ring, the ringbuffer size will always be equal to the capacity.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The time-to-live-seconds can be any integer between 0 and Integer#MAX_VALUE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>0 means infinite. The default is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of synchronous backups. For example, if it is set to 1, then the Ringbuffer items</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>are copied to one other member for fail-safety. Its default value is 1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "async-backup-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of asynchronous backups. Its default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "in-memory-format":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the in-memory format.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Setting the in-memory format controls the format of the stored item in the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>ringbuffer:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- OBJECT: the item is stored in deserialized format (a regular object)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- BINARY (default): the item is stored in serialized format (a binary blob)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The object in-memory format is useful when:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- the object stored in object format has a smaller footprint than in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>binary format</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- if there are readers using a filter. Since for every filter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>invocation, the object needs to be available in object format.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "ringbuffer-store":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Includes the Ringbuffer store factory class name and property configurations.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The store format is the same as the in-memory-format for the Ringbuffer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Adds the Split Brain Protection for this data-structure which you configure</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>using the "split-brain-protection" element. You should set the "split-brain-protection-ref"'s value as</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>ringbuffer:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>capacity: 10000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>time-to-live-seconds: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>async-backup-count: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>in-memory-format: BINARY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>ringbuffer-store:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.RingbufferStoreImpl</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>prop1: prop1-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>prop2: prop2-value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>merge-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: PutIfAbsentMergePolicy</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST FLAKE ID GENERATOR CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "flake-id-generator". It has the required attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your Flake ID generator.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "prefetch-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets how many IDs are pre-fetched on the background when one call to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>FlakeIdGenerator.newId() is made. Value must be in the range 1..100,000, default</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>is 100.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This setting pertains only to newId() calls made on the member that configured it.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "prefetch-validity-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets for how long the pre-fetched IDs can be used. If this time elapses, a new batch of IDs</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will be fetched. Time unit is milliseconds, default is 600,000 (10 minutes).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The IDs contain timestamp component, which ensures rough global ordering of IDs. If an</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>ID is assigned to an object that was created much later, it will be much out of order. If you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>don't care about ordering, set this value to 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This setting pertains only to newId() calls made on the member that configured it.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "epoch-start":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the offset of timestamp component. Time unit is milliseconds, default is 1514764800000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>(1.1.2018 0:00 UTC).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "node-id-offset":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the offset that will be added to the node ID assigned to cluster member for this generator.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Might be useful in A/B deployment scenarios where you have cluster A which you want to upgrade.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You create cluster B and for some time both will generate IDs and you want to have them unique.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>In this case, configure node ID offset for generators on cluster B.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "bits-sequence":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the bit-length of the sequence component, default is 6 bits.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "bits-node-id":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the bit-length of node id component. Default value is 16 bits.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "allowed-future-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets how far to the future is the generator allowed to go to generate IDs without blocking, default is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>15 seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you enable it, you can retrieve the Flake ID generators statistics. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>flake-id-generator:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>prefetch-count: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>prefetch-validity-millis: 600000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>epoch-start: 1514764800000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>node-id-offset: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>bits-sequence: 6</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>bits-node-id: 16</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>allowed-future-millis: 15000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST LISTENER CONFIGURATIONS =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration used to register the listeners that you created by implementing Hazelcast's</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># MembershipListener, DistributedObjectListener, MigrationListener and PartitionLostListener interfaces.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>- your-package.YourMembershipListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>- your-package.YourDistributedObjectListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>- your-package.YourMigrationListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>- your-package.YourPartitionLostListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SERIALIZATION CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "serialization".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "portable-version":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Version of the portable serialization. Portable version is used to differentiate two</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>of the same classes that have changes such as a new field or a new field type.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "use-native-byte-order":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true if you want to use the native byte order of the underlying platform. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "byte-order":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the byte order that the serialization will use. Its default value is BIG_ENDIAN. Available values</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>are BIG_ENDIAN and LITTLE_ENDIAN.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "enable-compression":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true to enable compression when default Java serialization is used. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "enable-shared-object":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true to enable shared object when default Java serialization is used. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "allow-unsafe":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true to allow the usage of unsafe. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "allow-override-default-serializers":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true to allow override of default serializers. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "data-serializable-factories":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Lists your class implementations of Hazelcast's DataSerializableFactory. Each factory has the required</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>"factory-id" attribute that you should give as the ID of your factory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "portable-factories":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Lists your class implementations of Hazelcast's PortableFactory. Each factory has the required "factory-id"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>attribute that you should give as the ID of your factory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "global-serializer":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Global serializer should be defined with "global-serializer" element. It has an optional boolean</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>"override-java-serialization" attribute. If you set it as true, the Java serialization step will be handled by the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>global serializer, not by the Java Serializable or Externalizable</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "serializers":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Lists the serializers (classes) that you implement using Hazelcast's StreamSerializer, ByteArraySerializer etc.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The serializer sub-elements has two required attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- class-name: Full class name of the serializer you implemented.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- type-class: Type of your serializer class implementation.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "check-class-def-errors":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If set to true, serialization system will check the class definitions error at the start of serialization process</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>and throw a Serialization Exception with the error definition.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "java-serialization-filter":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Allows to configure blacklisting and whitelisting for deserialized classes when Java serialization is used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>serialization:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>portable-version: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>use-native-byte-order: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>byte-order: BIG_ENDIAN</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>data-serializable-factories:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- factory-id: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.DataSerializableFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>portable-factories:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- factory-id: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.PortableFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>global-serializer:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>class-name: com.hazelcast.examples.GlobalSerializerFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>serializers:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- type-class: com.hazelcast.examples.DummyType</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.SerializerFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>check-class-def-errors: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>java-serialization-filter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>defaults-disabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>blacklist:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- com.acme.app.BeanComparator</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>whitelist:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- java.lang.String</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- example.Foo</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>package:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- com.acme.app</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- com.acme.app.subpkg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>prefix:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- com.hazelcast.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- java</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST HIGH-DENSITY MEMORY STORE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This feature is available only in Hazelcast Enterprise HD. Configuration element's name is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "native-memory".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set as true to enable the High-Density Memory Store usage. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - allocator-type:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Type of the memory allocator. Its default value is POOLED. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * STANDARD: Allocates/frees the memory using default OS memory manager.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * POOLED: Manages memory blocks in thread local pools.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Size of the total native memory to allocate. You can give the size using its "value" attribute and the unit</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>using its "unit" attribute. Unit can be bytes, kilobytes, megabytes and gigabytes. Default value is 128 and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>default unit is MEGABYTES.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "min-block-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Minimum size of the blocks in bytes to split and fragment a page block to assign to an allocation request.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It is used only by the POOLED memory allocator. The value has to be power of two.<span class="Apple-converted-space">  </span>Default value is 16.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "page-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Size of the page in bytes to allocate memory as a block. It is used only by the POOLED memory allocator. Its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>default value is 1 &lt;&lt; 22 (about 4 MB).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "metadata-space-percentage":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Percentage of the allocated native memory that is used for the metadata such as indexes, offsets, etc. It is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>used only by the POOLED memory allocator. Its default value is 12.5.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "persistent-memory-directory":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Simple configuration option for a single directory where the non-volatile memory (e.g. Intel Optane) is mounted.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This should be used only on single-socket systems as only one directory can be defined. On multi-socket systems</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>use &lt;persistent-memory&gt; instead.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If neither this or &lt;persistent-memory&gt; elements are defined, the RAM is used as native memory. This directory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will be created automatically if it does not exist. To avoid collisions, every member of the cluster will create</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>its own subfolder to work with the non-volatile memory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># - "persistent-memory":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the configuration for the non-volatile memory (e.g. Intel Optane) in the system. Under this configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>section multiple directories can be listed with optionally specifying the NUMA node the non-volatile memory mounted</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>in the given directory is attached to for NUMA-aware allocations. If neither this or the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>&lt;persistent-memory-directory&gt; elements are defined, the RAM is used as native memory. The directories defined under</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>this section will be created automatically if they do not exist. To avoid collisions, every member of the cluster</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will create its own subfolder to work with the non-volatile memory.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>native-memory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>allocator-type: POOLED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>size:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>unit: MEGABYTES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>value: 256</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>min-block-size: 32</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>page-size: 4194304</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>metadata-space-percentage: 12.5</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Simple configuration for single-socket machines with non-volatile memory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># persistent-memory-directory: /mnt/optane</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span># Advanced configuration for non-volatile memory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>persistent-memory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>mode: MOUNTED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>directories:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- directory: /mnt/pmem0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>numa-node: 0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- directory: /mnt/pmem1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>numa-node: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SECURITY CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This feature is available only in Hazelcast Enterprise. Configuration element's name is "security".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes and sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Set to true to enable Hazelcast's security features.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * realms:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Defines set of named security realms</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * member-authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maps member authentication to a realm name. It has the "realm" attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * client-authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Maps client authentication to a realm name. It has the "realm" attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "client-permission-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the name and properties of your class that you developed by implementing Hazelcast's</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>IPermissionPolicy interface, which is the default permission policy (com.hazelcast.security.IPermissionPolicy).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This policy defines the client authorization specifications.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "client-permissions":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Lists the client permissions that can be accessed by the client permission policy. For each permission, you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>need to provide the end points and actions to be permitted. Also, the name and principal for each permission</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>should be given using the "name" and "principal" attributes. Please see</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#permissions for all permissions and actions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "security-interceptor"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the security interceptor class that you developed by implementing Hazelcast's SecurityInterceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>interface to intercept every remote operation executed by a client.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "client-block-unmapped-actions"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies whether to block (true) or allow (false) actions, submitted as tasks in an Executor from</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the clients and have no permission mappings.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>HAZELCAST SECURITY REALMS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Security realms are named security configurations which can be referenced from Hazelcast security configuration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Currently, the realms support configuring &lt;authentication&gt; and/or &lt;identity&gt;. Only one type of authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>configuration and one type of identity configuration is allowed per the realm.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Authentication types:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* jaas</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Defines JAAS authentication - i.e. list of &lt;login-modules&gt; and its optional &lt;properties&gt;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* tls</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>TLS defines X.509 based authentication (for cases when SSL mutual authentication is configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>in Hazelcast network configuration)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* ldap</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>LDAP based authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Identity configuration types:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* credentials-factory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Specifies the name and properties of your class that you developed by implementing Hazelcast's Credentials</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This element has a mandatory "class-name" attribute where you should define the factory class implementing</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>ICredentialsFactory used to create Credentials objects.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>With the &lt;properties&gt; sub-element, you can define properties for the factory class. The properties can be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>defined with the &lt;property&gt; sub-element nested in the &lt;properties&gt;. The &lt;property&gt; element has the attribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>"name" used to define the name of the attribute. The value of the property is defined in the body.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* username-password</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Defines a static UsernamePasswordCredentials instance as the member's identity. It has mandatory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>"username" and "password" attributes.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* token</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Defines a static TokenCredentials instance as the client's identity. It has a "value" and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>it can have also "encoding" defined.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>security:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>realms:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: mr</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>jaas:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: com.hazelcast.examples.MyRequiredLoginModule</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>usage: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>property: value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>identity:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>credentials-factory:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>class-name: com.hazelcast.examples.MyCredentialsFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>property: value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: cr</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>jaas:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: com.hazelcast.examples.MyOptionalLoginModule</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>usage: OPTIONAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>property: value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: com.hazelcast.examples.MyRequiredLoginModule</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>usage: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>property: value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: ldapRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>ldap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>url: ldap://ldap.my-company.example</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>socket-factory-class-name: socketFactoryClassName</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>parse-dn: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-context: roleContext</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-filter: roleFilter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-mapping-attribute: roleMappingAttribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-mapping-mode: reverse</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-name-attribute: roleNameAttribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-recursion-max-depth: 25</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>role-search-scope: object</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>user-name-attribute: userNameAttribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>system-user-dn: systemUserDn</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>system-user-password: systemUserPassword</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>system-authentication: simple</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>security-realm: realmName</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>password-attribute: passwordAttribute</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>user-context: userContext</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>user-filter: userFilter</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>user-search-scope: one-level</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: tlsRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>tls:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>roleAttribute: cn</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: usernamePasswordIdentityRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>identity:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>username-password:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>username: user</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>password: Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: tokenIdentityRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>identity:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>token:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>encoding: base64</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">             </span>value: SGF6ZWxjYXN0</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: kerberosRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>kerberos:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>skip-role: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>relax-flags-check: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>use-name-without-realm: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>security-realm: krb5Acceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>ldap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>url: ldap://127.0.0.1/</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>system-authentication: GSSAPI</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>security-realm: krb5Initiator</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>skip-authentication: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>user-filter: "(krb5PrincipalName={login})"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>role-mapping-attribute: cn</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>identity:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>kerberos:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>realm: HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>security-realm: krb5Initiator</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>service-name-prefix: hz/</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>use-canonical-hostname: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>spn: hz/127.0.0.1@HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: simpleKerberosRealm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>kerberos:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>principal: hz/127.0.0.1@HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>keytab-file: /opt/localhost.keytab</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>identity:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>kerberos:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>realm: HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>principal: hz/127.0.0.1@HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>keytab-file: /opt/localhost.keytab</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: krb5Acceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>jaas:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: com.sun.security.auth.module.Krb5LoginModule</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>usage: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>isInitiator: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>useTicketCache: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>doNotPrompt: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>useKeyTab: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>storeKey: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>principal: hz/127.0.0.1@HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>keyTab: /opt/hz-localhost.keytab</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- name: krb5Initiator</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>jaas:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- class-name: com.sun.security.auth.module.Krb5LoginModule</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>usage: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">              </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>isInitiator: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>useTicketCache: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>doNotPrompt: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>useKeyTab: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>storeKey: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>principal: hz/127.0.0.1@HAZELCAST.COM</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">                </span>keyTab: /opt/hz-localhost.keytab</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>member-authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>realm: mr</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>client-authentication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>realm: cr</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>client-permission-policy:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>class-name: com.hazelcast.examples.MyPermissionPolicy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>property: value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>client-permissions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>on-join-operation: RECEIVE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>all:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>principal: admin</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>endpoints:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>endpoints:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>transaction:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>endpoints:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>map:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: custom</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>principal: dev</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>endpoints:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- create</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- destroy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- put</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- read</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>queue:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>topic:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>multimap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>list:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>set:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>flake-id-generator:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>lock:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>atomic-long:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>action: all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>countdown-latch:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>semaphore:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>executor-service:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>durable-executor-service:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cardinality-estimator:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>scheduled-executor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cache:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>user-code-deployment:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>principal: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>pn-counter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>replicatedmap:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- name: "*"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>actions:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>management:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- principal: management</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>endpoints:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- 127.0.0.1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>client-block-unmapped-actions: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>security-interceptors:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>- com.your-package.YourSecurityInterceptorImplementation</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST MEMBER ATTRIBUTE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># You can define member attributes for your Hazelcast members to tag your members according to your</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># business logic requirements. Configuration element's name is "member-attributes". You can list</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># each member attribute by their name. For each attribute, you need to provide its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># type and value.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>member-attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>CPU_CORE_COUNT:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>type: int</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>value: 4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>CPU_CORE_FREQ:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>type: int</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>value: 1033</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SPLIT BRAIN PROTECTION CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "split-brain-protection".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * name:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Name of your split brain protection. This name will be given as the value for "split-brain-protection-ref"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>element in the data structure configuration for which you want to define a split brain protection.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Currently, IMap, TransactionalMap and Cache structures support split brain protection.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies whether this split brain protection is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "minimum-cluster-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The minimum number of members required in a cluster for the cluster to remain in an</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># operational state. If the number of members is below the defined minimum at any time,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># the operations are rejected and the rejected operations return a SplitBrainProtectionException to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># their callers.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "protect-on":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies for which operations the split brain protection will be applied. Available values are</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>READ, WRITE and READ_WRITE.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "function-class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Name of the class that you develop by implementing Hazelcast's SplitBrainProtectionFunction interface to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>conclude the absence/presence of your split brain protection. This function is triggered when any change</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>happens to the member list.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "listeners":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Provides the list of split brain protection listeners that you can register to be notified about</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>split brain protection results.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Each listener is specified by "listener" sub-element. Split brain protection listeners are local to the member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>that they are registered, so they receive only events occurred on that local member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>split-brain-protection:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>splitBrainProtectionRuleWithThreeMembers:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>minimum-cluster-size: 3</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>protect-on: READ_WRITE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>function-class-name: com.your-package.AbsPresMySplitBrainProtection</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>listeners:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- com.your-package.ThreeMemberSplitBrainProtectionListener</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST LITE MEMBER CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "lite-member". When you want to use a Hazelcast member as a lite member,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># set this element's "enabled" attribute to true in that member's YAML configuration. Lite members do not store</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># data and are used mainly to execute tasks and register listeners. They do not have partitions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>lite-member:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST HOT RESTART PERSISTENCE CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># This feature is available only in Hazelcast Enterprise HD. Configuration element's name is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># "hot-restart-persistence". It has the required attribute "enabled" to specify whether this feature will be enabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># on your cluster. This part is the feature's configuration itself and you define the general specifications for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># the feature. However, note that "map" and "cache" have a sub-element called "hot-restart" with which you should</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># enable its usage on those data structures. Keep in mind that the Hot Restart feature is currently supported for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Hazelcast's map and cache data structures.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "base-dir":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the directory where the Hot Restart data will be stored. Its default value is hot-restart.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>You can use the default value, or you can specify another folder.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This directory will be created automatically if it does not exist.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "backup-dir":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the directory where the Hot backup data will be stored. If this element is not defined, hot backup will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>be disabled. If a directory is defined which does not exist, it will be created on first backup. To avoid clashing data</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>on multiple backups, each backup has a unique sequence ID which determines the name of the directory which will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>contain all hot restart data. This unique directory is created as a subdirectory of the configured `backup-dir`.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "parallelism":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Level of parallelism in Hot Restart Persistence. There will be this many IO threads,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>each writing in parallel to its own files. During the Hot Restart procedure, this many</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>IO threads will be reading the files and this many Rebuilder threads will be rebuilding</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the Hot Restart metadata.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "validation-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Validation timeout for the Hot Restart process when validating the cluster members expected to join and the partition</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>table on the whole cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "data-load-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Data load timeout for the Hot Restart process. All members in the cluster should finish restoring their local data</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>before this timeout period.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cluster-data-recovery-policy":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the data recovery policy that will be respected during Hot Restart cluster start. Valid values are;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>FULL_RECOVERY_ONLY: Starts the cluster only when all expected members are present and correct. Otherwise, it fails.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This is the default value.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>PARTIAL_RECOVERY_MOST_RECENT: Starts the cluster with the members which have most up-to-date partition table and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>successfully restored their data. All other members will leave the cluster and force start themselves. If no member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>restores its data successfully, cluster start fails.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>PARTIAL_RECOVERY_MOST_COMPLETE: Starts the cluster with the largest group of members which have the same partition</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>table version and successfully restored their data. All other members will leave the cluster and force start themselves.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If no member restores its data successfully, cluster start fails.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "encryption-at-rest":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Specifies the (optional) encryption settings for Hot Restart persistence. It has the required attribute "enabled"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to specify whether encryption is enabled. In addition to that, it specifies the symmetric cipher to use (such as</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>AES/CBC/PKCS5Padding), the encryption salt, the key size for generating encryption keys and, in the "secure-store"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>sub-element, the configuration of the Secure Store that it will be used to retrieve the encryption keys.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* &lt;keystore&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Provides integration with Java KeyStore. Specifies the path to the KeyStore file, the KeyStore type (such as</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>PKCS12 or JCEKS), the KeyStore password, an (optional) alias for the current encryption key entry, and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>(optionally) a polling interval for checking for changes in the KeyStore.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* &lt;vault&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Provides integration with HashiCorp Vault. Specifies the address of the Vault server, the (optional) secrets</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>engine path, the secret path where the encryption key is stored, the access token, the (optional) namespace,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>the (optional) &lt;ssl&gt; configuration for HTTPS support, and an (optional) polling interval for checking for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>changes in Vault.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>hot-restart-persistence:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>base-dir: /mnt/hot-restart</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>backup-dir: /mnt/hot-backup</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>validation-timeout-seconds: 120</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>data-load-timeout-seconds: 900</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>cluster-data-recovery-policy: PARTIAL_RECOVERY_MOST_COMPLETE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>encryption-at-rest:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>algorithm: AES/CBC/PKCS5Padding</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>salt: somesalt</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>key-size: 16</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>secure-store:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>keystore:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>path: /path/to/keystore.file</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>type: PKCS12</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>password: password</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>current-key-alias: current</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>polling-interval: 60</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>vault:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>address: http://localhost:1234</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>secret-path: secret/path</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>token: token</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>polling-interval: 60</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>factory-class-name: com.hazelcast.nio.ssl.BasicSSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>protocol: TLS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>mutualAuthentication: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>keyStore: /opt/hazelcast.keystore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>keyStorePassword: secret.97531</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>keyStoreType: JKS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>trustStore: /opt/hazelcast.truststore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>trustStorePassword: changeit</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">          </span>trustStoreType: JKS</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST USER CODE DEPLOYMENT CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "user-code-deployment". It has the required attribute "enabled" to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># specify whether this feature will be enabled on your cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "class-cache-mode":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Controls the local caching behavior for the classes loaded from the remote class repository.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>ETERNAL: Cache the loaded classes locally. This is the default value and suitable when you load long-living objects,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>such as domain objects stored in a map.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>OFF: Do not cache the loaded classes locally.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "provider-mode":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Controls how the classes are served to the other cluster members. Available values are as follows:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>LOCAL_AND_CACHED_CLASSES: Serve classes loaded from both local classpath and from other members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>This is the default value.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>LOCAL_CLASSES_ONLY: Serve classes from the local classpath only. Classes loaded from other members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will be used locally, but they are not served to other members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>OFF: Never serve classes to other members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "blacklist-prefixes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Comma separated name prefixes of classes/packages to be prevented from dynamic class loading.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>For example, if you set it as "com.foo", remote loading of all classes from the "com.foo" package</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will be blacklisted, including the classes from all its sub-packages. If you set it as "com.foo.Class",</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>then the "Class" and all classes having the "Class" as prefix in the "com.foo" package will be blacklisted.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "whitelist-prefixes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Comma separated name prefixes of classes/packages only from which the classes will be loaded. It allows</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to quickly configure remote loading only for classes from selected packages. It can be used together</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>with blacklisting. For example, you can whitelist the prefix "com.foo" and blacklist the prefix "com.foo.secret".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "provider-filter":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Filter to constraint members to be used for a class loading request when a class is not available</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>locally. The value is in the format "HAS_ATTRIBUTE:foo". When it is set as "HAS_ATTRIBUTE:foo", the class</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>loading request will only be sent to the members which have "foo" as a member attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>user-code-deployment:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>class-cache-mode: ETERNAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>provider-mode: LOCAL_CLASSES_ONLY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>blacklist-prefixes: com.foo</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>whitelist-prefixes: com.bar.MyClass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>provider-filter: HAS_ATTRIBUTE:lite</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST CRDT REPLICATION CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configures the replication mechanism for all CRDT implementations.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># The CRDT states are replicated in rounds (the period is configurable) and in each round the state is replicated</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># up to the configured number of members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "max-concurrent-replication-targets":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The maximum number of target members that we replicate the CRDT states to in one period. A higher count</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>will lead to states being disseminated more rapidly at the expense of burst-like behaviour - one update</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to a CRDT will lead to a sudden burst in the number of replication messages in a short time interval.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "replication-period-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The period between two replications of CRDT states in milliseconds. A lower value will increase the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>speed at which changes are disseminated to other cluster members at the expense of burst-like behaviour - less</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>updates will be batched together in one replication message and one update to a CRDT may cause a sudden</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>burst of replication messages in a short time interval. The value must be a positive non-null integer.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>crdt-replication:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>max-concurrent-replication-targets: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>replication-period-millis: 1000</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST PN COUNTER CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "pn-counter". It has the optional attribute "name" with which you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># can specify the name of your PN counter. Its default value is "default".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "replica-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Number of replicas on which the CRDT state will be kept. The updates are replicated</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>asynchronously between replicas.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>The number must be greater than 1 and up to 2147483647 (Integer.MAX_VALUE).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>The default value is 2147483647 (Integer.MAX_VALUE).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "split-brain-protection-ref":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Adds the Split Brain Protection for this data-structure which you configure using the "split-brain-protection" element. You should set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>the "split-brain-protection-ref"'s value as the "split-brain-protection"'s name.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "statistics-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you enable it, you can retrieve the PN counter statistics. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>pn-counter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>default:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>replica-count: 2147483647</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>split-brain-protection-ref: splitBrainProtectionRuleWithThreeNodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>statistics-enabled: true</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>===== HAZELCAST ADVANCED NETWORK CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>The advanced network configuration provides fine-tuning capabilities for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>configuring network with the ability of defining separate server sockets for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>different protocols, such as for member-member and member-client</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>communication. This configuration renders exclusive or relation with the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>generic "network" configuration element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>The "advanced-network" element has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Indicates whether the advanced network configuration is enabled or not. Default is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "join":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This configuration lets you choose a discovery mechanism that Hazelcast will use to form a cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Hazelcast can find members by multicast, TCP/IP lists and by various discovery mechanisms provided by different cloud APIs.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>The following are the elements of "join":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "multicast":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>It has the following sub-elements to fine tune the multicast discovery.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether multicast discovery is enabled. Default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "loopbackModeEnabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies if the loopback mode is enabled for multicast discovery. Default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "multicast-group":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the multicast group IP address when you want to create clusters within</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>the same network. Its default value is 224.2.2.3.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "multicast-port":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the multicast socket port that the Hazelcast member listens to and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>sends discovery messages through. Its default value is 54327.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "multicast-time-to-live":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Time-to-live value for multicast packets sent out to control the scope of multicasts.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "multicast-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Only when the members are starting up, this timeout (in seconds) specifies the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>period during which a member waits for a multicast response from another node.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>For example, if you set it as 60 seconds, each node will wait for 60 seconds until a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>leader node is selected. Its default value is 2 seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "trusted-interfaces":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Includes IP addresses of trusted members. When a node wants to join to the cluster,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>its join request will be rejected if it is not a trusted member.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>You can give an IP addresses range using the wildcard (*) on the last digit of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>IP address (e.g. 192.168.1.* or 192.168.1.100-110).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "tcp-ip":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>It has the following sub-elements.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether the TCP/IP discovery is enabled or not. Default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "connection-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>The maximum amount of time Hazelcast is going to try to connect to a well known member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>before giving up. Setting it to a too low value could mean that a member is not able</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>to connect to a cluster. Setting it to a too high value means that member startup could</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>slow down because of longer timeouts (e.g. when a well known member is not up). Increasing</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>this value is recommended if you have many IPs listed and the members cannot properly</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>build up the cluster. Its default value is 5.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "required-member":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>IP address of the required member. Cluster will only be formed if the member with this</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>IP address is found.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "member":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>IP address(es) of one or more well known members. Once members are connected to these</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>well known ones, all member addresses will be communicated with each other. You can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>also give comma separated IP addresses using the "members" element or list the members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>with the "member" element under "member-list".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "members":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Comma separated IP addresses of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "member-list":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Sequence of IP address(es) of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "interface":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>IP address(es) of one or more well known members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "aws":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery within Amazon EC2.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Please refer to https://github.com/hazelcast/hazelcast-aws/#configuration for the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "gcp":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery within the Google Cloud Platform.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Please refer to https://github.com/hazelcast/hazelcast-gcp/#configuration for the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "azure":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery within Microsoft Azure.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Please refer to https://github.com/hazelcast/hazelcast-azure/#configuring-at-hazelcast-side for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "kubernetes":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery in the Kubernetes environment.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Please refer to https://github.com/hazelcast/hazelcast-kubernetes#hazelcast-configuration for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "eureka":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery with using Eureka Service Registry.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Please refer to https://github.com/hazelcast/hazelcast-eureka#hazelcast-configuration for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>the configuration details.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "discovery-strategies":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Set its "enabled" sub-element to true for discovery in various cloud infrastructures. You also need to set the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>value of "hazelcast.discovery.enabled" property to true. See the description of the "properties" element</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>to learn how to do this.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>You can define multiple discovery strategies using the "discovery-strategy" sub-element and its</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>properties. Please refer to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#discovering-cluster-members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>to see the properties you can use.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>The following is an example for EC2 cloud.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>- enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                </span>class: com.hazelcast.jclouds.JCloudsDiscoveryStrategy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>provider: aws-ec2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>identity: AWS_IDENTITY</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">                  </span>credential: AWS_CREDENTIAL</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "member-address-provider":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>IMPORTANT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This configuration is not intended to provide addresses of other cluster members with</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>which the Hazelcast instance will form a cluster. This is an SPI for advanced use in</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>cases where the DefaultAddressPicker does not pick suitable addresses to bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>and publish to other cluster members. For instance, this could allow easier</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>deployment in some cases when running on Docker, AWS or other cloud environments.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>That said, if you are just starting with Hazelcast, you will probably want to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>set the member addresses by using the tcp-ip or multicast configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>or adding a discovery strategy.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Member address provider allows to plug in own strategy to customize:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>1. What address Hazelcast will bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>2. What address Hazelcast will advertise to other members on which they can bind to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>In most environments you don't need to customize this and the default strategy will work just</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>fine. However in some cloud environments the default strategy does not make the right choice and the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>member address provider delegates the process of address picking to external code.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- enabled:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether the member address provider SPI is enabled or not. Its default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "class-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>The name of the class implementing the com.hazelcast.spi.MemberAddressProvider interface.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "properties":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>The properties that will be provided when constructing the provided MemberAddressProvider. Hazelcast will</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>first try instantiating the provided class by invoking a constructor accepting a single</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>java.util.Properties instance. In the case where there is no such constructor and there are also</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>no properties defined by this configuration, Hazelcast will exceptionally try to use the no-arg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>constructor.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "failure-detector":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>A failure detector is responsible to determine if a member in the cluster is unreachable or crashed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Please refer to https://docs.hazelcast.org/docs/latest/manual/html-single/index.html#failure-detector-configuration</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>for the failure detectors implemented by Hazelcast.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This element has the following sub-element:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "icmp":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>ICMP can be used in addition to the other detectors. It operates at layer 3 and detects network</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>and hardware issues more quickly.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "timeout-milliseconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Timeout in Milliseconds before declaring a failed ping.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "fail-fast-on-startup":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Cluster Member will fail to start if it is unable to action an ICMP ping command when ICMP is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Failure is usually due to OS level restrictions.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "interval-milliseconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Time in milliseconds between each ICMP ping.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "max-attempts":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Maximum number of consecutive failed attempts before declaring a member suspect.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "parallel-mode":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Run ICMP detection in parallel with the Heartbeat failure detector.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "ttl":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Maximum number of times the IP Datagram (ping) can be forwarded, in most cases</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>all Hazelcast cluster members would be within one network switch/router therefore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>default of 0 is usually sufficient.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "member-server-socket-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Configures the server socket used for the member-member communication.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "client-server-socket-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Configures the server socket used for the member-client communication.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "wan-server-socket-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Configures the server sockets used for the WAN replication's inbound WAN connections.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Multiple WAN server sockets can be configured to allow configuring separate server sockets</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>for each inbound WAN connection.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "memcache-server-socket-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>These four server socket elements have the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>- "name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Name of the endpoint configuration. Only relevant when defining WAN server sockets.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "port":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>The ports which Hazelcast will use to communicate between cluster members. Its default value is 5701.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>It has the following sub-elements.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "port-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>The default value is 100, meaning that Hazelcast will try to bind 100 ports.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>If you set the value of port as 5701, as members join the cluster, Hazelcast tries to find</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>ports between 5701 and 5801. You can change the port count in cases like having large</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>instances on a single machine or you are willing to have only a few ports assigned.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>- "auto-increment":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Default value is true. If port is set to 5701, Hazelcast will try to find free</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>ports between 5701 and 5801. Normally, you will not need to change this value, but it comes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>in handy when needed. You may also want to choose to use only one port. In that case, you can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>disable the auto-increment feature of port by setting its value as false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "public-address":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Overrides the public address of a node. By default, a node selects its socket address</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>as its public address. But behind a network address translation (NAT), two endpoints (nodes)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>may not be able to see/access each other. If both nodes set their public addresses to their</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>defined addresses on NAT, then they can communicate with each other. In this case, their</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>public addresses are not an address of a local network interface but a virtual address defined by</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>NAT.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>This is optional to set and useful when you have a private cloud.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "reuse-address":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>When you shutdown a cluster member, the server socket port will be in the TIME_WAIT</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>state for the next couple of minutes. If you start the member right after shutting it down,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>you may not be able to bind it to the same port because it is in the TIME_WAIT state. If you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>set reuse-address to true, the TIME_WAIT state is ignored and you can bind the member to the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>same port again. Default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "outbound-ports":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>By default, Hazelcast lets the system pick up an ephemeral port during socket bind operation.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>But security policies/firewalls may require to restrict outbound ports to be used by</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Hazelcast-enabled applications. To fulfill this requirement, you can configure Hazelcast to use</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>only defined outbound ports.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>The outbound ports are listed as a sequence under the "outbound-ports" element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "interfaces":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Specifies which network interfaces Hazelcast should use. You need to set its "enabled" sub-element</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>to true to be able to use your defined interfaces. By default, it is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>You can define multiple interfaces using a nested "interfaces" sequence.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "ssl":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Lets you configure SSL using the SSL context factory. This feature is available only in Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Enterprise. To be able to use it, encryption should NOT be enabled and you should first implement</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>your SSLContextFactory class. Its configuration contains the factory class and SSL properties.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>By default, it is disabled. The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>factory-class-name: com.hazelcast.nio.ssl.BasicSSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>keyStore: keyStore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>keyStorePassword: keyStorePassword</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>keyManagerAlgorithm: SunX509</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>trustManagerAlgorithm: SunX509</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>protocol: TLS</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>mutualAuthentication: REQUIRED</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "socket-interceptor":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Lets you add custom hooks to join and perform connection procedures (like a custom authentication</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>protocol, etc.). This feature is available only in Hazelcast Enterprise. To be able to use it, you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>should first implement the MemberSocketInterceptor (for members joining to a cluster) or</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>SocketInterceptor (for clients connecting to a member) class. Its configuration contains the class you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>implemented and socket interceptor properties. By default, it is disabled. The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>socket-interceptor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>class-name: com.hazelcast.examples.MySocketInterceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>property1: value1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>property2: value2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "symmetric-encryption":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Lets you encrypt the entire socket level communication among all Hazelcast members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>This feature is available only in Hazelcast Enterprise.<span class="Apple-converted-space">  </span>Its configuration contains the encryption</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>properties and the same configuration must be placed to all members. By default, it is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>The following is an example:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>symmetric-encryption:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>algorithm: PBEWithMD5AndDES</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>salt: thesalt</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>password: thepass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>iteration-count: 19</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "socket-options":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "buffer-direct":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether direct or non-direct buffers should be allocated for the socket. The default value is false.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "tcp-no-delay":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether Nagle's algorithm should be disabled. The default value is true meaning that Nagle's</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>algorithm is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "keep-alive":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies whether TCP keep-alive should be enabled. The default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "connect-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the TCP timeout in seconds. The default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "send-buffer-size-kb":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the size of the send buffer. The default value is 128KB.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "receive-buffer-size-kb":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the size of the receive buffer. The default value is 128KB.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* "linger-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">              </span>Specifies the TCP linger seconds. The default value is 0.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "rest-server-socket-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Controls access to Hazelcast HTTP REST API.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>The methods available through REST API are grouped to several REST endpoint groups, which can be specified</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>in this section.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>The "rest-server-socket-endpoint-config" element has the same sub-elements that the above server socket</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>elements have plus it has the following additional sub-element.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "endpoint-groups":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Enables or disables named REST endpoint groups.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>If a group is not listed within the rest-api configuration, then it's 'enabledByDefault' flag is used</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>to control the behavior of the group.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>The groups can be defined with the "endpoint-group" sub-element. Groups and their defaults:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* CLUSTER_READ - enabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Group of operations for retrieving cluster state and its version.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* CLUSTER_WRITE - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Operations which changes cluster or node state or their configurations.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* HEALTH_CHECK - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Group of endpoints for HTTP health checking.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* HOT_RESTART - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Group of HTTP REST APIs related to Hot Restart feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* WAN - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Group of HTTP REST APIs related to WAN Replication feature.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>* DATA - disabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">            </span>Group of HTTP REST APIs for data manipulation in the cluster (e.g. IMap and IQueue operations).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* "wan-endpoint-config":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This element configures socket settings for the outgoing WAN connections.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>This element has the following sub-elements from the list above:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "name"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "outbound-ports"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "interfaces"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "ssl"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "socket-interceptor"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "symmetric-encryption"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* "socket-options"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>advanced-network:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>join:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>multicast:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>loopback-mode-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-group: 1.2.3.4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-port: 12345</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-timeout-seconds: 5</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>multicast-time-to-live: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>trusted-interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.10.2.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>tcp-ip:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connection-timeout-seconds: 123</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>required-member: dummy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>member: dummy1,dummy2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interface: 127.0.0.10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>members: dummy3,dummy4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>member-list:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- dummy5</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- dummy6</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>aws:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>access-key: my-access-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>secret-key: my-secret-key</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>region: us-west-1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>host-header: ec2.amazonaws.com</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connection-timeout-seconds: 7</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>read-timeout-seconds: 7</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connection-retries: 4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5710</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>security-group-name: hazelcast-sg</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag-key: type</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag-value: hz-nodes</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>iam-role: dummy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># cluster: my-clusters</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># family: test-family</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span># service-name: test-service</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>gcp:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>private-key-path: key-path</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>projects: project-1,project-2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>region: us-central1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>zones: us-central1-b,us-central1-c</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>label: key=value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5710</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>azure:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>instance-metadata-available: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>client-id: CLIENT_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>client-secret: CLIENT_SECRET</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tenant-id: TENANT_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>subscription-id: SUB_ID</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>resource-group: RESOURCE-GROUP-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>scale-set: SCALE-SET-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tag: TAG-NAME=HZLCAST001</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>hz-port: 5701-5707</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>use-public-ip: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>kubernetes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>namespace: MY-KUBERNETES-NAMESPACE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-name: MY-SERVICE-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-label-name: MY-SERVICE-LABEL-NAME</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>service-label-value: MY-SERVICE-LABEL-VALUE</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>eureka:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>self-registration: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>namespace: hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">      </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">        </span>node-filter:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">          </span>class: DummyFilterClass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">        </span>discovery-strategies:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">          </span>- class: DummyClass</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">            </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">            </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>#<span class="Apple-converted-space">              </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>failure-detector:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>icmp:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>timeout-milliseconds: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>fail-fast-on-startup: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interval-milliseconds: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>max-attempts: 2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>parallel-mode: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>ttl: 255</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>member-address-provider:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>class-name: DummyMemberAddressProvider</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>member-server-socket-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>outbound-ports:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 33000-35000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 37000,37001,37002,37003</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 38000,38500-38600</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>factory-class-name: com.hazelcast.examples.MySSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>socket-interceptor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.MySocketInterceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>socket-options:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>buffer-direct: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>tcp-no-delay: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>keep-alive: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>connect-timeout-seconds: 64</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>send-buffer-size-kb: 25</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>receive-buffer-size-kb: 33</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>linger-seconds: 99</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port-count: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>auto-increment: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port: 5701</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>public-address: dummy</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span># If the address should be reused. See NetworkConfig.setReuseAddress for more information.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>reuse-address: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>client-server-socket-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>outbound-ports:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>- 38000,38500-38600</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>factory-class-name: com.hazelcast.examples.MySSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>socket-interceptor:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>class-name: com.hazelcast.examples.MySocketInterceptor</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port-count: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>auto-increment: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port: 9999</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>public-address: 10.10.0.10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>reuse-address: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>rest-server-socket-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>name: internal-server-socket</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>- 10.10.1.*</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>auto-increment: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port: 8080</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>public-address: 192.168.1.10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>reuse-address: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>endpoint-groups:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>WAN:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>CLUSTER_READ:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>CLUSTER_WRITE:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>HEALTH_CHECK:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>wan-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>endpoint-tokyo:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>ssl:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>factory-class-name: com.hazelcast.examples.MySSLContextFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>foo: bar</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>endpoint-london:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>symmetric-encryption:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>algorithm: Algorithm</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>salt: thesalt</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>password: thepassword</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>iteration-count: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>wan-server-socket-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>wan-server-socket-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">          </span>interfaces:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- 192.168.8.101</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">            </span>- 10.20.10.100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>memcache-server-socket-endpoint-config:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>name: memcache</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>auto-increment: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port-count: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>port: 6000</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST CP SUBSYSTEM CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "cp-subsystem".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "cp-member-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of CP Members to initialize the CP Subsystem.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It is 0 by default, meaning that the CP subsystem is disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The CP subsystem is enabled when a positive value is set.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>After the CP subsystem is initialized successfully, more CP members can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>be added at run-time and number of active CP members can go beyond</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the configured CP member count. Number of CP members can be smaller than</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>total size of the Hazelcast cluster. For instance, you can run</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>5 CP members in a 20-member Hazelcast cluster.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If set, must be greater than or equal to "group-size".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "group-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Number of CP members to run CP groups. If set, it must be an odd</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>number between 3 and 7. Otherwise, "cp-member-count" is respected.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If set, must be smaller than or equal to "cp-member-count".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "session-time-to-live-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Duration for a CP session to be kept alive after the last received</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>heartbeat. The session will be closed if there is no new heartbeat</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>this duration. Session TTL must be decided wisely. If a very low value is set,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>CP session of a Hazelcast instance can be closed prematurely if the instance</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>temporarily loses connectivity to the CP subsystem because of a network</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>partition or a GC pause. In such an occasion, all CP resources of this Hazelcast</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>instance, such as FencedLock or ISemaphore, are released. On the other hand,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>if a very large value is set, CP resources can remain assigned to an actually</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>crashed Hazelcast instance for too long and liveliness problems can occur.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The CP subsystem offers an API, CPSessionManagementService, to deal with</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>liveliness issues related to CP sessions. In order to prevent premature</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>session expires, session TTL configuration can be set a relatively large value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>and CPSessionManagementService#forceCloseSession() can be manually called to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>close CP session of a crashed Hazelcast instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Must be greater than "session-heartbeat-interval-seconds", and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>smaller than or equal to "missing-cp-member-auto-removal-seconds".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "session-heartbeat-interval-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Interval for the periodically-committed CP session heartbeats.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>A CP session is started on a CP group with the first session-based</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>request of a Hazelcast instance. After that moment, heartbeats are</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>periodically committed to the CP group.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Must be smaller than "session-time-to-live-seconds".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "missing-cp-member-auto-removal-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Duration to wait before automatically removing a missing CP member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>from the CP subsystem. When a CP member leaves the cluster, it is not</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>automatically removed from the CP subsystem, since it could be still</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>alive and left the cluster because of a network partition.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>On the other hand, if a missing CP member is actually crashed,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>it creates a danger for its CP groups, because it will be still part of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>majority calculations. This situation could lead to losing majority of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>CP groups if multiple CP members leave the cluster over time.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>With the default configuration, missing CP members will be automatically</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>removed from the CP subsystem after 4 hours. This feature is very useful</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>in terms of fault tolerance when CP member count is also configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to be larger than group size. In this case, a missing CP member will be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>safely replaced in its CP groups with other available CP members</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>in the CP subsystem. This configuration also implies that no network</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>partition is expected to be longer than the configured duration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Must be greater than or equal to "session-time-to-live-seconds".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If a missing CP member comes back alive after it is automatically</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>removed from the CP subsystem with this feature, that CP member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>must be terminated manually.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "fail-on-indeterminate-operation-state":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Offers a choice between at-least-once and at-most-once execution</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>of the operations on top of the Raft consensus algorithm.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It is disabled by default and offers at-least-once execution guarantee.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If enabled, it switches to at-most-once execution guarantee.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>When you invoke an API method on a CP data structure proxy, it</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>replicates an internal operation to the corresponding CP group. After</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>this operation is committed to majority of this CP group by the Raft</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>leader node, it sends a response for the public API call. If a failure</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>causes loss of the response, then the calling side cannot determine if</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the operation is committed on the CP group or not. In this case, if this</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>configuration is disabled, the operation is replicated again to the CP</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>group, and hence could be committed multiple times. If it is enabled,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the public API call fails with</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>com.hazelcast.core.IndeterminateOperationStateException</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "persistence-enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Flag to denote whether or not CP Subsystem Persistence is enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If enabled, CP members persist their local CP data to stable storage and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>can recover from crashes.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "base-dir":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Base directory to store all CP data when persistence-enabled</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>is true. This directory can be shared between multiple CP members.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>Each CP member creates a unique directory for itself under the base</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>directory. This is especially useful for cloud environments where CP</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>members generally use a shared filesystem.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "data-load-timeout-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>Timeout duration for CP members to restore their data from disk.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>A CP member fails its startup if it cannot complete its CP data restore</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">  </span>process in the configured duration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "raft-algorithm":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>These parameters tune specific parameters of Hazelcast’s Raft consensus</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>algorithm implementation and are only for power users.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "leader-election-timeout-in-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Leader election timeout in milliseconds. If a candidate cannot win</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>majority of the votes in time, a new election round is initiated.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "leader-heartbeat-period-in-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Period in milliseconds for a leader to send heartbeat messages</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to its followers.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "max-missed-leader-heartbeat-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of missed leader heartbeats to trigger a new leader election.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "append-request-max-entry-count":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of entries that can be sent in a single batch of append</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>entries request.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "commit-index-advance-count-to-snapshot":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Number of new commits to initiate a new snapshot after the last snapshot.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "uncommitted-entry-count-to-reject-new-appends":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of uncommitted entries in the leader's Raft log before</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>temporarily rejecting new requests of callers.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "append-request-backoff-timeout-in-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Timeout in milliseconds for append request backoff. After the leader</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>sends an append request to a follower, it will not send a subsequent</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>append request until the follower responds to the former request</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>or this timeout occurs.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "semaphores":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Configurations for CP Semaphore instances. The CP Semaphores can be configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>with mappings under keys as their names. CP Semaphores have the following</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>sub-element:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "jdk-compatible":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Enables / disables JDK compatibility of the CP ISemaphore.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When it is JDK compatible, just as in the Semaphore#release()</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>method, a permit can be released without acquiring it first, because</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>acquired permits are not bound to threads. However, there is no</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>auto-cleanup of acquired permits upon Hazelcast server / client failures.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If a permit holder fails, its permits must be released manually.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>When JDK compatibility is disabled, a HazelcastInstance must</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>acquire permits before releasing them and it cannot release a permit</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>that it has mot acquired. It means, you can acquire a permit</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>from one thread and release it from another thread using the same</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>HazelcastInstance, but not different HazelcastInstances. In this mode,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>acquired permits are automatically released upon failure of the holder</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>HazelcastInstance. So there is a minor behavioral difference</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to the Semaphore#release() method.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>JDK compatibility is disabled by default.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "locks":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Configurations for FencedLock instances. The FencedLocks can be configured</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>with mappings under keys as their names. FencedLocks have the following</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>sub-element:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "lock-acquire-limit":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Maximum number of reentrant lock acquires. Once a caller acquires</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the lock this many times, it will not be able to acquire the lock again,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>until it makes at least one unlock() call.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>By default, no upper bound is set for the number of reentrant lock</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>acquires, which means that once a caller acquires a FencedLock,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>all of its further lock() calls will succeed. However, for instance,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>if you set lock-acquire-limit to 2, once a caller acquires</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>the lock, it will be able to acquire it once more, but its third lock()</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>call will not succeed.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>If lock-acquire-limit is set to 1, then the lock becomes non-reentrant.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>cp-subsystem:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>cp-member-count: 10</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>group-size: 3</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>session-time-to-live-seconds: 60</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>session-heartbeat-interval-seconds: 5</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>missing-cp-member-auto-removal-seconds: 120</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>fail-on-indeterminate-operation-state: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>persistence-enabled: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>base-dir: custom-cp-dir</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>data-load-timeout-seconds: 30</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>raft-algorithm:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>leader-election-timeout-in-millis: 2000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>leader-heartbeat-period-in-millis: 5000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>max-missed-leader-heartbeat-count: 5</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>append-request-max-entry-count: 50</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>commit-index-advance-count-to-snapshot: 1000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>uncommitted-entry-count-to-reject-new-appends: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>append-request-backoff-timeout-in-millis: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>semaphores:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>sem1:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>jdk-compatible: true</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>initial-permits: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>sem2:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>jdk-compatible: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>initial-permits: 2</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>locks:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>lock1:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>lock-acquire-limit: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>lock2:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">        </span>lock-acquire-limit: 2</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST METRICS CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "metrics".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>The master-switch for the metrics collection. If this is set</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to false no metrics collection is done, regardless of the other</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>settings. Its default value is true.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "management-center":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Defines the Hazelcast Management Center related metrics configuration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Controls whether the metrics collected are exposed to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Hazelcast Management Center. It is enabled by default.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Please note that the metrics are polled by the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Hazelcast Management Center, hence the members need to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>buffer the collected metrics between two polls. The aim</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>for this switch is to reduce memory consumption of the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>metrics system if the Hazelcast Management Center is not</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>It has the following<span class="Apple-converted-space">  </span>sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "retention-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Sets the number of seconds the metrics will be retained on the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>instance. By default, metrics are retained for 5 seconds (that is for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>one collection of metrics values, if default "collection-frequency-seconds"</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>collection frequency is used). More retention means more heap memory, but</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>allows for longer client hiccups without losing a value (for example to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>restart the Management Center).</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "jmx":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Defines the JMX related metrics configuration.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">      </span>It has the following attributes:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Controls whether the metrics collected are exposed to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>through JMX. It is enabled by default.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>In order to expose the metrics, the metrics system need</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>to be enabled via the enabled master-switch attribute.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "collection-frequency-seconds":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the metrics collection frequency in seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>By default, metrics are collected every 5 seconds.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>metrics:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>management-center:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>retention-seconds: 30</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>jmx:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>collection-frequency-seconds: 10</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>auditlog:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>factory-class-name: com.acme.AuditlogToSyslogFactory</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>host: syslogserver.acme.com</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>port: 514</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>type: tcp</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST INSTANCE TRACKING CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "instance-tracking".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "enabled":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Enables or disables instance tracking.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "format-pattern":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the pattern used to render the contents of the instance tracking file.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>It may contain placeholders for these properties:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "product": The instance product name, e.g. "Hazelcast" or "Hazelcast Enterprise".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "version": The instance version.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "mode": The instance mode which can be "server", "embedded" or "client".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "start_timestamp": The timestamp of when the instance was started expressed the difference,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>measured in milliseconds, between the current time and midnight, January 1, 1970 UTC</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "licensed": If this instance is using a license or not. The value 0 signifies</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>that there is no license set and the value 1 signifies that a license is in use.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>- "pid": Attempts to get the process ID value. The algorithm does not guarantee to get the</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>process ID on all JVMs and operating systems so please test before use. In case we are unable to</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>get the PID, the value will be -1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The placeholders are defined by a $HZ_INSTANCE_TRACKING{ prefix and followed by }.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>For instance, a placeholder for the "start_timestamp" would be $HZ_INSTANCE_TRACKING{start_timestamp}.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The placeholders are resolved in a fail-safe manner. Any incorrect syntax</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>is ignored and only the known properties are resolved, placeholders for</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>any parameters which do not have defined values will be ignored. This also</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>means that if there is a missing closing bracket in one of the placeholders,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>the property name will be resolved as anything from the opening bracket</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>to the next closing bracket, which might contain additional opening brackets.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>If unset, a JSON formatted output will be used.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># * "file-name":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>Sets the name of the file which will contain the tracking metadata. If left unset</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>a file named "Hazelcast.process" will be created in the directory as returned by</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>System.getProperty("java.io.tmpdir").</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>The filename can contain placeholders that will be resolved in the same way</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>as placeholders for the format pattern.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>instance-tracking:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>file-name: hazelcast.process</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>format-pattern: $HZ_INSTANCE_TRACKING{product}:$HZ_INSTANCE_TRACKING{version}</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># ===== HAZELCAST SQL CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># Configuration element's name is "sql".</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "executor-pool-size":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Defines the number of threads responsible for query execution.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">    </span>* "statement-timeout-millis":</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span># <span class="Apple-converted-space">        </span>Defines the timeout in milliseconds that is applied to queries without an explicit timeout.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>sql:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>executor-pool-size: 8</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>statement-timeout-millis: 0</span></p>
<p class="p2"><span class="s1"></span><br></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>===== HAZELCAST JET CONFIGURATION =====</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Configuration element's name is &lt;jet&gt;.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* &lt;instance&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>General configuration options pertaining to a Jet instance.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">        </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* &lt;cooperative-thread-count&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Sets the number of threads each cluster member will use to execute Jet</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>jobs. This refers only to threads executing `cooperative`</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>processors; each `blocking` processor is assigned its own thread.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* &lt;flow-control-period&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>While executing a Jet job there is the issue of regulating the rate</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>at which one member of the cluster sends data to another member. The</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>receiver will regularly report to each sender how much more data it</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>is allowed to send over a given DAG edge. This method sets the length</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>(in milliseconds) of the interval between flow-control ("ack") packets.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* &lt;backup-count&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Sets the number of backups that Jet will maintain for the job metadata</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>and snapshots. Each backup is on another cluster member; all backup</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>write operations must complete before the overall write operation can</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>complete. The maximum allowed number of backups is 6 and the default is</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>1.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>For example, if you set the backup count to 2, Jet will replicate all</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>the job metadata and snapshot data to two other members. If one or two</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>members of the cluster fail, Jet can recover the data from the snapshot</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>and continue executing the job on the remaining members without loss.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* &lt;scale-up-delay-millis&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Sets the delay after which auto-scaled jobs will restart if a new member</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>is added to the cluster. The default is 10 seconds. Has no effect on</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>jobs with auto scaling disabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>* &lt;lossless-restart-enabled&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Sets whether lossless job restart is enabled for the node. With lossless</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>restart you can restart the whole cluster without losing the jobs and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>their state. The feature is implemented on top of the Hot Restart</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>feature of Hazelcast which persists the data to disk. If enabled, you</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>have to also configure Hot Restart.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Note: the snapshots exported using `Job#exportSnapshot` will also have</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Hot Restart storage enabled.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>Feature is disabled by default. If you enable this option in open-source,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>the member will fail to start, you need Enterprise to run it and obtain a</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">          </span>license from Hazelcast.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* &lt;edge-defaults&gt;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>A configuration object for a DAG `Edge` that holds fine-tuning parameters</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>that influence its performance characteristics.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">    </span>It has the following sub-elements:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* &lt;queue-size&gt;:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Sets the capacity of processor-to-processor concurrent queues. The value</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>is rounded upwards to the next power of 2.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>When data needs to travel between two processors on the same cluster</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>member, Jet sends it over a concurrent single-producer, single-consumer</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>(SPSC) queue of fixed capacity.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>Since there are several processors executing the logic of each vertex,</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>and since the queues are SPSC, there will be</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>`senderParallelism * receiverParallelism` queues representing the edge on</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>each member. The edge capacity should strike a balance between</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">      </span>performance and memory usage.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* &lt;packet-size-limit&gt;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>For a distributed edge, data is sent to a remote member via Hazelcast network</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>packets. Each packet is dedicated to the data of a single edge, but may contain</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>any number of data items. This setting limits the size of the packet in bytes.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Packets should be large enough to drown out any fixed overheads, but small enough</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>to allow good interleaving with other packets.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Note that a single item cannot straddle packets, therefore the maximum packet size</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>can exceed the value configured here by the size of a single data item.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>This setting has no effect on a non-distributed edge.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>* &lt;receive-window-multiplier&gt;</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Sets the scaling factor used by the adaptive receive window sizing</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>function.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>For each distributed edge the receiving member regularly sends</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>flow-control ("ack") packets to its sender which prevent it from sending</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>too much data and overflowing the buffers. The sender is allowed to send</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>the data one `receive window` further than the last acknowledged byte and</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>the receive window is sized in proportion to the rate of processing at</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>the receiver.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>Ack packets are sent in regular intervals (InstanceConfig#setFlowControlPeriodMs)</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>and the `receive window multiplier` sets the factor of the linear</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>relationship between the amount of data processed within one such</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>interval and the size of the receive window.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>To put it another way, let us define an `ackworth` as the amount of data</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>processed between two consecutive ack packets. The receive window</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>multiplier determines the number of ackworths the sender can be ahead of</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>the last acked byte.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>#<span class="Apple-converted-space">  </span>This setting has no effect on a non-distributed edge.</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">  </span>jet:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>instance:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>cooperative-thread-count: 4</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>flow-control-period: 100</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>backup-count: 1</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>scale-up-delay-millis: 10000</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>lossless-restart-enabled: false</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">    </span>edge-defaults:</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>queue-size: 1024</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>packet-size-limit: 16384</span></p>
<p class="p1"><span class="s1"><span class="Apple-converted-space">      </span>receive-window-multiplier: 3</span></p>
</body>
</html>
